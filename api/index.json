{"repository_name":"github.com/google/ac-library.cr","body":"# ac-library.cr [![Run test and verifier][ci-badge]][ci-link] [![Coverage][coverage-badge]][coverage-link]\n\n[ci-badge]: https://github.com/google/ac-library.cr/workflows/Run%20test%20and%20verifier/badge.svg\n[ci-link]: https://github.com/google/ac-library.cr/actions?query=workflow%3A%22Run+test+and+verifier%22\n[coverage-badge]: https://codecov.io/gh/google/ac-library.cr/branch/master/graph/badge.svg\n[coverage-link]: https://codecov.io/gh/google/ac-library.cr\n\nThis is not an officially supported Google product.\n\nac-library.cr is a Crystal port of [ac-library](https://github.com/atcoder/ac-library).\n\nThis library aims to provide the almost-equivalent (and additional) functionality with ac-library but in the manner of Crystal.\n\n## Installation\n\nAdd the following code to your project's `shard.yml`.\n\n```yml\ndependencies:\n  atcoder:\n    github: google/ac-library.cr\n    branch: master\n```\n\n## Usage\n\n```cr\nrequire \"atcoder\" # load all libraries\nrequire \"atcoder/fenwick_tree\" # load FenwickTree\n```\n\n## [`atcoder/mod_int`](https://google.github.io/ac-library.cr/docs/src/mod_int.cr) (Implements [<atcoder/modint>](https://atcoder.github.io/ac-library/document_en/modint.html))\n\n* `modint` => Unimplemented\n* `modint998244353` => `AtCoder::ModInt998244353`\n* `modint1000000007` => `AtCoder::ModInt1000000007`\n\n  ```cr\n  alias Mint = AtCoder::ModInt1000000007\n  Mint.new(30_i64) // Mint.new(7_i64) #=> 285714292\n  ```\n\n* `static_modint` => `AtCoder.static_modint`\n\n  ```cr\n  AtCoder.static_modint(ModInt101, 101_i64)\n  alias Mint = AtCoder::ModInt101\n  Mint.new(80_i64) + Mint.new(90_i64) #=> 89\n  ```\n\n* `dynamic_modint` => Unimplemented\n\n## [`atcoder/fenwick_tree`](https://google.github.io/ac-library.cr/docs/src/fenwick_tree.cr) (Implements [<atcoder/fenwicktree>](https://atcoder.github.io/ac-library/document_en/fenwicktree.html))\n\n* `fenwick_tree<T> fw(n)` => `AtCoder::FenwickTree(T).new(n)`\n* `fenwick_tree<T> fw(array)` => `AtCoder::FenwickTree(T).new(array)`\n\n  ```cr\n  tree = AtCoder::FenwickTree(Int64).new(10)\n  tree.add(3, 10)\n  tree.add(5, 20)\n  tree[3..5] #=> 30\n  tree[3...5] #=> 10\n  ```\n\n  * `.add(p, x)` => `#add(p, x)`\n  * `.sum(l, r)` => `#[](l...r)`\n\n## [`atcoder/seg_tree`](https://google.github.io/ac-library.cr/docs/src/seg_tree.cr) (Implements [<atcoder/segtree>](https://atcoder.github.io/ac-library/document_en/segtree.html))\n\n* `segtree<S, op, e> seg(v)` => `AtCoder::SegTree(S).new(v, &op?)`\n\n  単位元は暗黙的にnilで定義されるため使用する際に定義する必要はありません。逆に言えばモノイドの (単位元以外の) 元にnilを含めることはできません。 The identity element will be implicitly defined as nil, so you don't have to manually define it. In the other words, you cannot include nil into an element of the monoid.\n\n  ```cr\n  tree = AtCoder::SegTree.new((0...100).to_a) {|a, b| [a, b].min}\n  tree[10...50] #=> 10\n  ```\n\n  * `.set(p, x)` => `#[]=(p, x)`\n  * `.get(p)` => `#[](p)`\n  * `.prod(l, r)` => `#[](l...r)`\n  * `.all_prod()` => `#all_prod`\n  * `.max_right<f>(l)` => Unimplemented\n  * `.max_left<f>(r)` => Unimplemented\n\n## [`atcoder/lazy_seg_tree`](https://google.github.io/ac-library.cr/docs/src/lazy_seg_tree.cr) (Implements [<atcoder/lazysegtree>](https://atcoder.github.io/ac-library/document_en/lazysegtree.html))\n\n* `lazy_segtree<S, op, e, F, mapping, composition, id> seg(v)` => `AtCoder::LazySegTree(S, F).new(v, op, mapping, composition)`\n\n  単位元は暗黙的にnilで定義されるため使用する際に定義する必要はありません。逆に言えばモノイドの (単位元以外の) 元にnilを含めることはできません。 The identity element will be implicitly defined as nil, so you don't have to manually define it. In the other words, you cannot include nil into an element of the monoid.\n\n  また、恒等写像は暗黙的にnilで定義されるため使用する際に定義する必要はありません。逆に言えばFの (恒等写像以外の) 元にnilを含めることはできません。 Similarly, the identity map of F will be implicitly defined as nil, so you don't have to manually define it. In the other words, you cannot include nil into an element of the set F.\n\n  ```cr\n  op = ->(a : Int32, b : Int32) { [a, b].min }\n  mapping = ->(f : Int32, x : Int32) { f }\n  composition = ->(a : Int32, b : Int32) { a }\n  tree = AtCoder::LazySegTree(Int32, Int32).new((0...100).to_a, op, mapping, composition)\n  tree[10...50] #=> 10\n  tree[20...60] = 0\n  tree[50...80] #=> 0\n  ```\n\n  * `.set(p, x)` => Unimplemented\n  * `.get(p)` => `#[](p)`\n  * `.prod(l, r)` => `#[](l...r)`\n  * `.all_prod()` => `#all_prod`\n  * `.apply(p, f)` => `#[]=(p, f)`\n  * `.apply(l, r, f)` => `#[]=(l...r, f)`\n  * `.max_right<f>(l)` => Unimplemented\n  * `.max_left<f>(r)` => Unimplemented\n\n## [`atcoder/string`](https://google.github.io/ac-library.cr/docs/src/string.cr) (Implements [<atcoder/string>](https://atcoder.github.io/ac-library/document_en/string.html))\n\n* `suffix_array(s)` => Unimplemented\n* `lcp_array(s)` => Unimplemented\n* `z_algorithm(s)` => `AtCoder::String.z_algorithm(s)`\n\n## [`atcoder/dsu`](https://google.github.io/ac-library.cr/docs/src/dsu.cr) (Implements [<atcoder/dsu>](https://atcoder.github.io/ac-library/document_en/dsu.html))\n\n* `dsu(n)` => `AtCoder::DSU.new(n)`\n\n  ```cr\n  dsu = AtCoder::DSU.new(10)\n  dsu.merge(0, 2)\n  dsu.merge(4, 2)\n  dsu.same?(0, 4) #=> true\n  dsu.size(4) #=> 3\n  ```\n\n  * `.merge(a, b)` => `#merge(a, b)`\n  * `.same(a, b)` => `#same?(a, b)`\n  * `.leader(a)` => `#leader(a)`\n  * `.size()` => `#size`\n  * `.groups()` => `#groups`\n\n    * This method returns set instead of list.\n\n## [`atcoder/max_flow`](https://google.github.io/ac-library.cr/docs/src/max_flow.cr) (Implements [<atcoder/maxflow>](https://atcoder.github.io/ac-library/document_en/maxflow.html))\n\n* `mf_graph<Cap> graph(n)` => `AtCoder::MaxFlow.new(n)`\n\n  `Cap` is always `Int64`.\n\n  ```cr\n  mf = AtCoder::MaxFlow.new(3)\n  mf.add_edge(0, 1, 3)\n  mf.add_edge(1, 2, 1)\n  mf.add_edge(0, 2, 2)\n  mf.flow(0, 2) #=> 3\n  ```\n\n  * `.add_edge(from, to, cap)` => `#add_edge(from, to, cap)`\n  * `.flow(s, t)` => `#flow(s, t)`\n  * `.min_cut(s)` => Unimplemented\n  * `.get_edge(i)` => Unimplemented\n  * `.edges()` => Unimplemented\n  * `.change_edge(i, new_cap, new_flow)` => Unimplemented\n\n## [`atcoder/scc`](https://google.github.io/ac-library.cr/docs/src/scc.cr) (Impements [<atcoder/scc>](https://atcoder.github.io/ac-library/document_en/scc.html))\n\n* `scc_graph graph(n)` => `AtCoder::SCC.new(n)`\n\n  ```cr\n  scc = AtCoder::SCC.new(3_i64)\n  scc.add_edge(0, 1)\n  scc.add_edge(1, 0)\n  scc.add_edge(2, 0)\n  scc.scc #=> [Set{2}, Set{0, 1}]\n  ```\n\n  * `.add_edge(from, to)` => `#add_edge(from, to)`\n  * `.scc()` => `#scc`\n\n## [`atcoder/two_sat`](https://google.github.io/ac-library.cr/docs/src/two_sat.cr) (Implements [<atcoder/twosat>](https://atcoder.github.io/ac-library/document_en/twosat.html))\n\n* `two_sat graph(n)` => `AtCoder::SCC.new(n)`\n\n  ```cr\n  twosat = AtCoder::TwoSat.new(2_i64)\n  twosat.add_clause(0, true, 1, false)\n  twosat.add_clause(1, true, 0, false)\n  twosat.add_clause(0, false, 1, false)\n  twosat.satisfiable? #=> true\n  twosat.answer #=> [false, false]\n  ```\n\n  * `.add_clause(i, f, j, g)` => `#add_clause(i, f, j, g)`\n  * `.satisfiable()` => `#satisfiable?`\n  * `.answer()` => `#answer`\n\n    This method will raise if it's not satisfiable\n\n## [`atcoder/math`](https://google.github.io/ac-library.cr/docs/src/math.cr) (Implements [<atcoder/math>](https://atcoder.github.io/ac-library/document_en/math.html))\n\n* `pow_mod(x, n, m)` => `AtCoder::Math.pow_mod(x, n, m)`\n* `inv_mod(x, m)` => `AtCoder::Math.inv_mod(x, m)`\n* `crt(r, m)` => `AtCoder::Math.crt(r, m)`\n* `floor_sum` => `AtCoder::Math.floor_sum(n, m, a, b)`\n\n## [`atcoder/convolution`](https://google.github.io/ac-library.cr/docs/src/convolution.cr) (Implements [<atcoder/convolution>](https://atcoder.github.io/ac-library/document_en/convolution.html))\n\n* `convolution(a, b)` => `AtCoder::Convolution.convolution(a, b)`\n\n  ```cr\n  a = [AtCoder::ModInt998244353.new(1_i64)] * 3\n  AtCoder::Convolution.convolution(a, a) #=> [1, 2, 3, 2, 1]\n  ```\n\n* `convolution_ll(a, b)` => `AtCoder::Convolution.convolution_ll(a, b)`\n\n  ```cr\n  a = [1_000_000_000_i64]\n  AtCoder::Convolution.convolution_ll(a, a) #=> [1000000000000000000]\n  ```\n\n## [`atcoder/min_cost_flow`](https://google.github.io/ac-library.cr/docs/src/min_cost_flow.cr) (Implements [<atcoder/mincostflow>](https://atcoder.github.io/ac-library/document_en/mincostflow.html))\n\n* `mcf_graph graph(n)` => `AtCoder::MinCostFlow.new(n)`\n\n  ```cr\n  flow = AtCoder::MinCostFlow.new(5)\n  flow.add_edge(0, 1, 30, 3)\n  flow.add_edge(0, 2, 60, 9)\n  flow.add_edge(1, 2, 40, 5)\n  flow.add_edge(1, 3, 50, 7)\n  flow.add_edge(2, 3, 20, 8)\n  flow.add_edge(2, 4, 50, 6)\n  flow.add_edge(3, 4, 60, 7)\n  flow.flow(0, 4, 70) #=> {70, 1080}\n  ```\n\n  * `.add_edge(from, to, cap, cost)` => `#add_edge(from, to, cap, cost)`\n  * `.flow(s, t)` => `#flow(s, t)`\n  * `.flow(s, t, flow_limit)` => `#flow(s, t, flow_limit)`\n  * `.slope(s, t)` => `#slope(s, t)`\n  * `.slope(s, t, flow_limit)` => `#slope(s, t, flow_limit)`\n  * `.get_edge(i)` => Unimplemented\n  * `.edges()` => Unimplemented\n\n## [`atcoder/priority_queue`](https://google.github.io/ac-library.cr/docs/src/priority_queue.cr) (not in ACL)\n\n* `AtCoder::PriorityQueue(T).new`\n\n  ```cr\n  q = AtCoder::PriorityQueue(Int64).new\n  q << 1_i64\n  q << 3_i64\n  q << 2_i64\n  q.pop #=> 3\n  q.pop #=> 2\n  q.pop #=> 1\n  ```\n\n  * `#<<(v : T)`\n\n    Push value into the queue.\n\n  * `#pop`\n\n    Pop value from the queue.\n\n  * `#each`\n\n    Yields each item in the queue in comparator's order.\n\n    ヒープを破壊せず列挙するため、$O(n \\log{n})$ の前計算を行っています。ただし、`#first` は $O(1)$ で動作するように最適化されています。 it pre-calculates in $O(n \\log{n})$ to enumerate without destroying the heap. Note, however, that `#first` works for $O(1)$\n\n    ```cr\n    q = AtCoder::PriorityQueue.new(1..n)\n\n    # O(n log(n))\n    q.each do |x|\n      break\n    end\n\n    # O(n log(n) + n) = O(n log(n))\n    q.each do |x|\n      # something to do in O(1)\n    end\n\n    # O(1)\n    q.first # => n\n    ```\n\n\n  * `#size`\n\n    Returns size of the queue\n\n  * `#empty?`\n\n    Returns `true` if the queue is empty.\n\n## [`atcoder/prime`](https://google.github.io/ac-library.cr/docs/src/prime.cr) (not in ACL)\n\n* `AtCoder::Prime` (module)\n\n  Implements [Ruby's Prime library](https://ruby-doc.com/stdlib/libdoc/prime/rdoc/prime.html).\n\n  ```cr\n  AtCoder::Prime.first(7) # => [2, 3, 5, 7, 11, 13, 17]\n  ```\n","program":{"html_id":"github.com/google/ac-library.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/google/ac-library.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/google/ac-library.cr/AtCoder","path":"AtCoder.html","kind":"module","full_name":"AtCoder","name":"AtCoder","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"convolution.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/convolution.cr"},{"filename":"dsu.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr"},{"filename":"fenwick_tree.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr"},{"filename":"priority_queue.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr"},{"filename":"graph.cr","line_number":19,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr"},{"filename":"lazy_seg_tree.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr"},{"filename":"prime.cr","line_number":19,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr"},{"filename":"math.cr","line_number":19,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr"},{"filename":"max_flow.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr"},{"filename":"min_cost_flow.cr","line_number":19,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/min_cost_flow.cr"},{"filename":"mod_int.cr","line_number":19,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"mod_int.cr","line_number":225,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"mod_int.cr","line_number":226,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"mod_int.cr","line_number":227,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"mod_int.cr","line_number":228,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"mod_int.cr","line_number":229,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"red_black_tree.cr","line_number":25,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr"},{"filename":"scc.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/scc.cr"},{"filename":"seg_tree.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr"},{"filename":"skew_heap.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr"},{"filename":"string.cr","line_number":17,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/string.cr"},{"filename":"two_sat.cr","line_number":19,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/two_sat.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"static_modint(name,modulo)-macro","html_id":"static_modint(name,modulo)-macro","name":"static_modint","doc":"Implements [atcoder::static_modint](https://atcoder.github.io/ac-library/master/document_en/modint.html).\n\n```\nAtCoder.static_modint(ModInt101, 101_i64)\nalias Mint = AtCoder::ModInt101\nMint.new(80_i64) + Mint.new(90_i64) # => 89\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/modint.html\" target=\"_blank\">atcoder::static_modint</a>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"modulo","doc":null,"default_value":"","external_name":"modulo","restriction":""}],"args_string":"(name, modulo)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L27","def":{"name":"static_modint","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"modulo","doc":null,"default_value":"","external_name":"modulo","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    module AtCoder\n      \n# Implements atcoder::modint\n{{ modulo }}\n.\n\n      \n#\n\n      \n# ```\n\n      \n# alias Mint = AtCoder::\n{{ name }}\n\n\n      \n# Mint.new(30_i64) // Mint.new(7_i64)\n\n      \n# ```\n\n      struct \n{{ name }}\n\n        MOD = \n{{ modulo }}\n\n\n        getter value : Int64\n\n        def initialize(value)\n          @value = value.to_i64 % MOD\n        \nend\n\n        \n# Change the initial capacity of this array to improve performance\n\n        @@factorials = Array(self).new(100_000_i64)\n\n        def self.factorial(n)\n          if @@factorials.empty?\n            @@factorials << self.new(1_i64)\n          \nend\n          @@factorials.size.upto(n) do |i|\n            @@factorials << @@factorials.last * i\n          \nend\n          @@factorials[n]\n        \nend\n\n        def self.permutation(n, k)\n          raise ArgumentError.new(\"k cannot be greater than n\") unless n >= k\n          factorial(n) // factorial(n - k)\n        \nend\n\n        def self.combination(n, k)\n          raise ArgumentError.new(\"k cannot be greater than n\") unless n >= k\n          permutation(n, k) // @@factorials[k]\n        \nend\n\n        def self.repeated_combination(n, k)\n          combination(n + k - 1, k)\n        \nend\n\n        def self.zero\n          self.new(0_i64)\n        \nend\n\n        def inv\n          g, x = AtCoder::Math.extended_gcd(@value, MOD)\n          self.class.new(x)\n        \nend\n\n        def +(value)\n          self.class.new(@value + value.to_i64 % MOD)\n        \nend\n\n        def -(value)\n          self.class.new(@value - value.to_i64 % MOD)\n        \nend\n\n        def *(value)\n          self.class.new(@value * (value.to_i64 % MOD))\n        \nend\n\n        def /(value : self)\n          raise DivisionByZeroError.new if value == 0\n          self * value.inv\n        \nend\n\n        def /(value)\n          raise DivisionByZeroError.new if value == 0\n          self * self.class.new(value.to_i64).inv\n        \nend\n\n        def //(value)\n          self./(value)\n        \nend\n\n        def **(value)\n          self.class.new(AtCoder::Math.pow_mod(@value, value.to_i64, MOD))\n        \nend\n\n        def <<(value)\n          self * self.class.new(2_i64) ** value\n        \nend\n\n        def sqrt\n          z = self.class.new(1_i64)\n          until z ** ((MOD - 1) // 2) == MOD - 1\n            z += 1\n          \nend\n          q = MOD - 1\n          m = 0\n          while q % 2 == 0\n            q //= 2\n            m += 1\n          \nend\n          c = z ** q\n          t = self ** q\n          r = self ** ((q + 1) // 2)\n          m.downto(2) do |i|\n            tmp = t ** (2 ** (i - 2))\n            if tmp != 1\n              r *= c\n              t *= c ** 2\n            \nend\n            c *= c\n          \nend\n          if r * r == self\n            r.to_i64 * 2 <= MOD ? r : -r\n          \nelse\n            nil\n          \nend\n        \nend\n\n        def to_i64\n          @value\n        \nend\n\n        def ==(value : self)\n          @value == value.to_i64\n        \nend\n\n        def ==(value)\n          @value == value\n        \nend\n\n        def -\n          self.class.new(0_i64) - self\n        \nend\n\n        def +\n          self\n        \nend\n\n        def abs\n          self\n        \nend\n\n        \n# ac-library compatibility\n\n\n        def pow(value)\n          self.**(value)\n        \nend\n\n        def val\n          self.to_i64\n        \nend\n\n        \n# ModInt shouldn't be compared\n\n\n        def <(value)\n          raise NotImplementedError.new(\"<\")\n        \nend\n        def <=(value)\n          raise NotImplementedError.new(\"<=\")\n        \nend\n        def >(value)\n          raise NotImplementedError.new(\">\")\n        \nend\n        def >=(value)\n          raise NotImplementedError.new(\">=\")\n        \nend\n\n        delegate to_s, to: @value\n        delegate inspect, to: @value\n      \nend\n    \nend\n\n    struct Int\n      def +(value : AtCoder::\n{{ name }}\n)\n        value + self\n      \nend\n\n      def -(value : AtCoder::\n{{ name }}\n)\n        -value + self\n      \nend\n\n      def *(value : AtCoder::\n{{ name }}\n)\n        value * self\n      \nend\n\n      def //(value : AtCoder::\n{{ name }}\n)\n        value.inv * self\n      \nend\n\n      def /(value : AtCoder::\n{{ name }}\n)\n        self // value\n      \nend\n\n      def ==(value : AtCoder::\n{{ name }}\n)\n        value == self\n      \nend\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/google/ac-library.cr/AtCoder/Convolution","path":"AtCoder/Convolution.html","kind":"module","full_name":"AtCoder::Convolution","name":"Convolution","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"convolution.cr","line_number":24,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/convolution.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [atcoder::convolution](https://atcoder.github.io/ac-library/master/document_en/convolution.html).\n\n```\na = [AtCoder::ModInt998244353.new(1_i64)] * 3\nAtCoder::Convolution.convolution(a, a) # => [1, 2, 3, 2, 1]\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/convolution.html\" target=\"_blank\">atcoder::convolution</a>.</p>","class_methods":[{"id":"convolution(a:Array(T),b:Array(T))forallT-class-method","html_id":"convolution(a:Array(T),b:Array(T))forallT-class-method","name":"convolution","doc":"Implements atcoder::convolution.convolution.\nTODO: Support for int","summary":"<p>Implements atcoder::convolution.convolution.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Array(T)"}],"args_string":"(a : Array(T), b : Array(T)) forall T","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/convolution.cr#L74","def":{"name":"convolution","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if a.empty? || b.empty?\n  return [] of T\nend\nmodulo = T::MOD\nn = modulo - 1\nresult_size = (a.size + b.size) - 1\nc = 1_i64 << n.trailing_zeros_count\nif result_size > c\n  raise(ArgumentError.new(\"With modulo #{modulo}, total array length must be less than or equal to #{c}\"))\nend\nfft_size = 1_i64\nwhile !fft_size >= result_size\n  fft_size = fft_size << 1\nend\ninput_a = Array(T).new(fft_size) do |i|\n  i < a.size ? a[i] : T.zero\nend\ninput_b = Array(T).new(fft_size) do |i|\n  i < b.size ? b[i] : T.zero\nend\nprimitive_root = AtCoder::Math.get_primitive_root(modulo)\ng = (T.new(primitive_root)) ** (n // fft_size)\nfft(input_a, g)\nfft(input_b, g)\nfft_size.times do |i|\n  __temp_26 = i\n  input_a[__temp_26] = input_a[__temp_26] * input_b[i]\nend\nifft(input_a, g)\ninput_a[0...result_size]\n"}},{"id":"convolution_ll(a:Array(Int64),b:Array(Int64))-class-method","html_id":"convolution_ll(a:Array(Int64),b:Array(Int64))-class-method","name":"convolution_ll","doc":"Implements atcoder::convolution.convolution_ll.","summary":"<p>Implements atcoder::convolution.convolution_ll.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(Int64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Array(Int64)"}],"args_string":"(a : Array(Int64), b : Array(Int64))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/convolution.cr#L111","def":{"name":"convolution_ll","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(Int64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Array(Int64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if a.empty? || b.empty?\n  return [] of Int64\nend\na1 = a.map do |n|\n  AtCoder::ModInt754974721.new(n)\nend\na2 = a.map do |n|\n  AtCoder::ModInt167772161.new(n)\nend\na3 = a.map do |n|\n  AtCoder::ModInt469762049.new(n)\nend\nb1 = b.map do |n|\n  AtCoder::ModInt754974721.new(n)\nend\nb2 = b.map do |n|\n  AtCoder::ModInt167772161.new(n)\nend\nb3 = b.map do |n|\n  AtCoder::ModInt469762049.new(n)\nend\nc1 = convolution(a1, b1)\nc2 = convolution(a2, b2)\nc3 = convolution(a3, b3)\nm1 = 754974721_i64\nm2 = 167772161_i64\nm3 = 469762049_i64\n(c1.zip(c2, c3)).map do |n1, n2, n3|\n  p = AtCoder::Math.inv_mod(m1, m2)\n  tmp = ((n2.val - n1.val) * p) % m2\n  answer = n1.val + (m1 * tmp)\n  p = AtCoder::Math.inv_mod(m1 * m2, m3)\n  tmp = (((n3.val - answer) % m3) * p) % m3\n  answer + ((m1 * m2) * tmp)\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/DirectedGraph","path":"AtCoder/DirectedGraph.html","kind":"class","full_name":"AtCoder::DirectedGraph(NodeInfo, EdgeInfo)","name":"DirectedGraph","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/AtCoder/Graph","kind":"class","full_name":"AtCoder::Graph","name":"Graph"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/AtCoder/Graph","kind":"class","full_name":"AtCoder::Graph","name":"Graph"},{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph.cr","line_number":116,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(nodes:Array(NodeInfo))-class-method","html_id":"new(nodes:Array(NodeInfo))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(NodeInfo)"}],"args_string":"(nodes : Array(NodeInfo))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L24","def":{"name":"new","args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(NodeInfo)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DirectedGraph(NodeInfo, EdgeInfo).allocate\n_.initialize(nodes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int64,initial_node:NodeInfo=nil)-class-method","html_id":"new(size:Int64,initial_node:NodeInfo=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"initial_node","doc":null,"default_value":"nil","external_name":"initial_node","restriction":"NodeInfo"}],"args_string":"(size : Int64, initial_node : NodeInfo = <span class=\"n\">nil</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L32","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"initial_node","doc":null,"default_value":"nil","external_name":"initial_node","restriction":"NodeInfo"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DirectedGraph(NodeInfo, EdgeInfo).allocate\n_.initialize(size, initial_node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(from,to,edge:EdgeInfo=1_i64)-instance-method","html_id":"add_edge(from,to,edge:EdgeInfo=1_i64)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"edge","doc":null,"default_value":"1_i64","external_name":"edge","restriction":"EdgeInfo"}],"args_string":"(from, to, edge : EdgeInfo = <span class=\"n\">1_i64</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L117","def":{"name":"add_edge","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"edge","doc":null,"default_value":"1_i64","external_name":"edge","restriction":"EdgeInfo"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@edges << edge\nedge_id = @edges.size.to_i64 - 1\n@adjacencies[from][to.to_i64] = edge_id\nedge_id\n"}},{"id":"get_edge(from,to)-instance-method","html_id":"get_edge(from,to)-instance-method","name":"get_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(from, to)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L124","def":{"name":"get_edge","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"edge_id = @adjacencies[from][to.to_i64]\n@edges[edge_id]\n"}},{"id":"update_edge(from,to,edge:EdgeInfo=1_i64)-instance-method","html_id":"update_edge(from,to,edge:EdgeInfo=1_i64)-instance-method","name":"update_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"edge","doc":null,"default_value":"1_i64","external_name":"edge","restriction":"EdgeInfo"}],"args_string":"(from, to, edge : EdgeInfo = <span class=\"n\">1_i64</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L129","def":{"name":"update_edge","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"edge","doc":null,"default_value":"1_i64","external_name":"edge","restriction":"EdgeInfo"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"edge_id = @adjacencies[from][to.to_i64]\n@edges[edge_id] = edge\nedge_id\n"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/DSU","path":"AtCoder/DSU.html","kind":"class","full_name":"AtCoder::DSU","name":"DSU","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"dsu.cr","line_number":27,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [atcoder::dsu](https://atcoder.github.io/ac-library/master/document_en/dsu.html).\n\n```\ndsu = AtCoder::DSU.new(10)\ndsu.merge(0, 2)\ndsu.merge(4, 2)\ndsu.same?(0, 4) # => true\ndsu.size(4)     # => 3\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/dsu.html\" target=\"_blank\">atcoder::dsu</a>.</p>","class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr#L32","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"groups-instance-method","html_id":"groups-instance-method","name":"groups","doc":"Implements atcoder::dsu.groups().\nThis method returns `Set` instead of list.","summary":"<p>Implements atcoder::dsu.groups().</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr#L71","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"groups = Hash(Int64, Set(Int64)).new do |h, k|\n  h[k] = Set(Int64).new\nend\n@size.times do |i|\n  groups[leader(i)] << i\nend\ngroups.values.to_set\n"}},{"id":"leader(node)-instance-method","html_id":"leader(node)-instance-method","name":"leader","doc":"Implements atcoder::dsu.leader(node).","summary":"<p>Implements atcoder::dsu.leader(node).</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr#L38","def":{"name":"leader","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"while !(@parents[node] == node)\n  @parents[node] = @parents[@parents[node]]\n  node = @parents[node]\nend\nnode\n"}},{"id":"merge(a,b)-instance-method","html_id":"merge(a,b)-instance-method","name":"merge","doc":"Implements atcoder::dsu.merge(a, b).","summary":"<p>Implements atcoder::dsu.merge(a, b).</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr#L47","def":{"name":"merge","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"leader_a = leader(a.to_i64)\nleader_b = leader(b.to_i64)\nif leader_a == leader_b\nelse\n  if @sizes[leader_a] < @sizes[leader_b]\n    leader_a, leader_b = leader_b, leader_a\n  end\n  @parents[leader_b] = leader_a\n  __temp_28 = leader_a\n  @sizes[__temp_28] = @sizes[__temp_28] + @sizes[leader_b]\nend\n"}},{"id":"parents:Array(Int64)-instance-method","html_id":"parents:Array(Int64)-instance-method","name":"parents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int64)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr#L28","def":{"name":"parents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int64)","visibility":"Public","body":"@parents"}},{"id":"same?(a,b)-instance-method","html_id":"same?(a,b)-instance-method","name":"same?","doc":"Implements atcoder::dsu.same(a, b).","summary":"<p>Implements atcoder::dsu.same(a, b).</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr#L60","def":{"name":"same?","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(leader(a)) == (leader(b))"}},{"id":"size(node)-instance-method","html_id":"size(node)-instance-method","name":"size","doc":"Implements atcoder::dsu.size().","summary":"<p>Implements atcoder::dsu.size().</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr#L65","def":{"name":"size","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sizes[leader(node)]"}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr#L30","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@size"}},{"id":"sizes:Array(Int64)-instance-method","html_id":"sizes:Array(Int64)-instance-method","name":"sizes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int64)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/dsu.cr#L29","def":{"name":"sizes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int64)","visibility":"Public","body":"@sizes"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/FenwickTree","path":"AtCoder/FenwickTree.html","kind":"class","full_name":"AtCoder::FenwickTree(T)","name":"FenwickTree","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"fenwick_tree.cr","line_number":27,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [atcoder::fenwick_tree](https://atcoder.github.io/ac-library/master/document_en/fenwicktree.html).\n\n```\ntree = AtCoder::FenwickTree(Int64).new(10)\ntree.add(3, 10)\ntree.add(5, 20)\ntree[3..5]  # => 30\ntree[3...5] # => 10\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/fenwicktree.html\" target=\"_blank\">atcoder::fenwick_tree</a>.</p>","class_methods":[],"constructors":[{"id":"new(size:Int64)-class-method","html_id":"new(size:Int64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"}],"args_string":"(size : Int64)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr#L31","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FenwickTree(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(bits:Array)-class-method","html_id":"new(bits:Array)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"bits","doc":null,"default_value":"","external_name":"bits","restriction":"Array"}],"args_string":"(bits : Array)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr#L35","def":{"name":"new","args":[{"name":"bits","doc":null,"default_value":"","external_name":"bits","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FenwickTree(T).allocate\n_.initialize(bits)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](range:Range(Int,Int))-instance-method","html_id":"[](range:Range(Int,Int))-instance-method","name":"[]","doc":"Implements atcoder::fenwick_tree.sum(left, right)","summary":"<p>Implements atcoder::fenwick_tree.sum(left, right)</p>","abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"args_string":"(range : Range(Int, Int))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr#L71","def":{"name":"[]","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"left = range.begin\nright = range.exclusive? ? range.end : range.end + 1\nsum(left, right)\n"}},{"id":"add(index,value)-instance-method","html_id":"add(index,value)-instance-method","name":"add","doc":"Implements atcoder::fenwick_tree.add(index, value)","summary":"<p>Implements atcoder::fenwick_tree.add(index, value)</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(index, value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr#L47","def":{"name":"add","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index = index + 1\nwhile index <= @size\n  __temp_32 = index - 1\n  @bits[__temp_32] = @bits[__temp_32] + value\n  index = index + (index & (-index))\nend\n"}},{"id":"bits:Array(T)-instance-method","html_id":"bits:Array(T)-instance-method","name":"bits","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr#L29","def":{"name":"bits","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"@bits"}},{"id":"left_sum(index)-instance-method","html_id":"left_sum(index)-instance-method","name":"left_sum","doc":"Exclusive left sum","summary":"<p>Exclusive left sum</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"args_string":"(index)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr#L56","def":{"name":"left_sum","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = T.zero\nwhile index >= 1\n  ret = ret + @bits[index - 1]\n  index = index - (index & (-index))\nend\nret\n"}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr#L28","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@size"}},{"id":"sum(left,right)-instance-method","html_id":"sum(left,right)-instance-method","name":"sum","doc":"Implements atcoder::fenwick_tree.sum(left, right)","summary":"<p>Implements atcoder::fenwick_tree.sum(left, right)</p>","abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"args_string":"(left, right)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/fenwick_tree.cr#L66","def":{"name":"sum","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(left_sum(right)) - (left_sum(left))"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/Graph","path":"AtCoder/Graph.html","kind":"class","full_name":"AtCoder::Graph(NodeInfo, EdgeInfo)","name":"Graph","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph.cr","line_number":20,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/google/ac-library.cr/AtCoder/DirectedGraph","kind":"class","full_name":"AtCoder::DirectedGraph(NodeInfo, EdgeInfo)","name":"DirectedGraph"},{"html_id":"github.com/google/ac-library.cr/AtCoder/UndirectedGraph","kind":"class","full_name":"AtCoder::UndirectedGraph(NodeInfo, EdgeInfo)","name":"UndirectedGraph"}],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(nodes:Array(NodeInfo))-class-method","html_id":"new(nodes:Array(NodeInfo))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(NodeInfo)"}],"args_string":"(nodes : Array(NodeInfo))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L24","def":{"name":"new","args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(NodeInfo)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Graph(NodeInfo, EdgeInfo).allocate\n_.initialize(nodes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int64,initial_node:NodeInfo=nil)-class-method","html_id":"new(size:Int64,initial_node:NodeInfo=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"initial_node","doc":null,"default_value":"nil","external_name":"initial_node","restriction":"NodeInfo"}],"args_string":"(size : Int64, initial_node : NodeInfo = <span class=\"n\">nil</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L32","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"initial_node","doc":null,"default_value":"nil","external_name":"initial_node","restriction":"NodeInfo"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Graph(NodeInfo, EdgeInfo).allocate\n_.initialize(size, initial_node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dfs(node:Int64,initial_value:T,&block:Int64,T,NamedTuple(),T->->)forallT-instance-method","html_id":"dfs(node:Int64,initial_value:T,&amp;block:Int64,T,NamedTuple(),T-&gt;-&gt;)forallT-instance-method","name":"dfs","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Int64"},{"name":"initial_value","doc":null,"default_value":"","external_name":"initial_value","restriction":"T"}],"args_string":"(node : Int64, initial_value : T, &block : Int64, T, NamedTuple(), T ->  -> ) forall T","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L72","def":{"name":"dfs","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Int64"},{"name":"initial_value","doc":null,"default_value":"","external_name":"initial_value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":4,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int64, T, NamedTuple(node: Int64, node_info: NodeInfo | Nil, edge: Int64 | Nil, edge_info: EdgeInfo | Nil, parent: Int64), (T -> ) -> )"},"return_type":"","visibility":"Public","body":"@visited = Set(Int64).new\ninfo = {node: node, node_info: @nodes[node].as(NodeInfo | Nil), edge: nil.as(Int64 | Nil), edge_info: nil.as(EdgeInfo | Nil), parent: -1_i64}\nblock.call(node, initial_value, info, ->(new_value : T) do\n  dfs(node, -1_i64, new_value, &block)\nend)\n"}},{"id":"dijkstra(start_node)-instance-method","html_id":"dijkstra(start_node)-instance-method","name":"dijkstra","doc":"Performs Dijkstra's Algorithm to calculate the distance of each node from `start_node`.\nTo use this method, `EdgeInfo` must implement `.zero` and `#+(EdgeInfo)` and `#>(EdgeInfo)`.","summary":"<p>Performs Dijkstra's Algorithm to calculate the distance of each node from <code>start_node</code>.</p>","abstract":false,"args":[{"name":"start_node","doc":null,"default_value":"","external_name":"start_node","restriction":""}],"args_string":"(start_node)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L42","def":{"name":"dijkstra","args":[{"name":"start_node","doc":null,"default_value":"","external_name":"start_node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dist = Array(EdgeInfo | Nil).new(@size, nil)\ndist[start_node] = EdgeInfo.zero\nprev_nodes = Array(Int64 | Nil).new(@size, nil)\nqueue = AtCoder::PriorityQueue(::Tuple(EdgeInfo, Int64)).new do |__arg0, __arg1|\n  ad = __arg0[0]\n  av = __arg0[1]\n  bd = __arg1[0]\n  bv = __arg1[1]\n  ad > bd\nend\nqueue << {EdgeInfo.zero, start_node.to_i64}\nwhile !queue.empty?\n  d, v = queue.pop.not_nil!\n  current_dist = dist[v].not_nil!\n  if d > current_dist\n    next\n  end\n  @adjacencies[v].each do |__arg2|\n    to = __arg2[0]\n    edge_id = __arg2[1]\n    cost = @edges[edge_id]\n    target_dist = dist[to]\n    if target_dist.nil? || target_dist > (current_dist + cost)\n      dist[to] = current_dist + cost\n      prev_nodes[to] = v\n      queue << {current_dist + cost, to}\n    end\n  end\nend\nArray(::NamedTuple(dist: EdgeInfo | Nil, prev: Int64 | Nil)).new(@size) do |i|\n  {dist: dist[i], prev: prev_nodes[i]}\nend\n"}},{"id":"visited:Set(Int64)-instance-method","html_id":"visited:Set(Int64)-instance-method","name":"visited","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Set(Int64)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L22","def":{"name":"visited","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Set(Int64)","visibility":"Public","body":"@visited"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/LazySegTree","path":"AtCoder/LazySegTree.html","kind":"class","full_name":"AtCoder::LazySegTree(S, F)","name":"LazySegTree","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lazy_seg_tree.cr","line_number":37,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [atcoder::lazy_segtree](https://atcoder.github.io/ac-library/master/document_en/lazysegtree.html).\n\nThe identity element will be implicitly defined as nil, so you don't\nhave to manually define it. In the other words, you cannot include\nnil into an element of the monoid.\n\nSimilarly, the identity map of F will be implicitly defined as nil,\nso you don't have to manually define it. In the other words, you\ncannot include nil into an element of the set F.\n\n```\nop = ->(a : Int32, b : Int32) { [a, b].min }\nmapping = ->(f : Int32, x : Int32) { f }\ncomposition = ->(a : Int32, b : Int32) { a }\ntree = AtCoder::LazySegTree(Int32, Int32).new((0...100).to_a, op, mapping, composition)\ntree[10...50] # => 10\ntree[20...60] = 0\ntree[50...80] # => 0\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/lazysegtree.html\" target=\"_blank\">atcoder::lazy_segtree</a>.</p>","class_methods":[],"constructors":[{"id":"new(values:Array(S),operator:S,S->S,application:F,S->S,composition:F,F->F)-class-method","html_id":"new(values:Array(S),operator:S,S-&gt;S,application:F,S-&gt;S,composition:F,F-&gt;F)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(S)"},{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":"(S, S -> S)"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":"(F, S -> S)"},{"name":"composition","doc":null,"default_value":"","external_name":"composition","restriction":"(F, F -> F)"}],"args_string":"(values : Array(S), operator : S, S -> S, application : F, S -> S, composition : F, F -> F)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L40","def":{"name":"new","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(S)"},{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":"(S, S -> S)"},{"name":"application","doc":null,"default_value":"","external_name":"application","restriction":"(F, S -> S)"},{"name":"composition","doc":null,"default_value":"","external_name":"composition","restriction":"(F, F -> F)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LazySegTree(S, F).allocate\n_.initialize(values, operator, application, composition)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](index:Int)-instance-method","html_id":"[](index:Int)-instance-method","name":"[]","doc":"Implements atcoder::lazy_segtree.get(index).","summary":"<p>Implements atcoder::lazy_segtree.get(index).</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L85","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(get_range(index, index + 1, 0, 0...(@segments.size + 1))).not_nil!"}},{"id":"[](range:Range(Int,Int))-instance-method","html_id":"[](range:Range(Int,Int))-instance-method","name":"[]","doc":"Implements atcoder::lazy_segtree.prod(left, right).","summary":"<p>Implements atcoder::lazy_segtree.prod(left, right).</p>","abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"args_string":"(range : Range(Int, Int))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L90","def":{"name":"[]","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"l = range.begin\nr = range.exclusive? ? range.end : range.end + 1\n(get_range(l, r, 0, 0...(@segments.size + 1))).not_nil!\n"}},{"id":"[]=(index:Int,applicator:F)-instance-method","html_id":"[]=(index:Int,applicator:F)-instance-method","name":"[]=","doc":"Implements atcoder::lazy_segtree.apply(index, applicator).","summary":"<p>Implements atcoder::lazy_segtree.apply(index, applicator).</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"applicator","doc":null,"default_value":"","external_name":"applicator","restriction":"F"}],"args_string":"(index : Int, applicator : F)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L71","def":{"name":"[]=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"applicator","doc":null,"default_value":"","external_name":"applicator","restriction":"F"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"apply_range(index, index + 1, applicator, 0, 0...(@segments.size + 1))\napplicator\n"}},{"id":"[]=(range:Range(Int,Int),applicator:F)-instance-method","html_id":"[]=(range:Range(Int,Int),applicator:F)-instance-method","name":"[]=","doc":"Implements atcoder::lazy_segtree.apply(left, right, applicator).","summary":"<p>Implements atcoder::lazy_segtree.apply(left, right, applicator).</p>","abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"},{"name":"applicator","doc":null,"default_value":"","external_name":"applicator","restriction":"F"}],"args_string":"(range : Range(Int, Int), applicator : F)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L77","def":{"name":"[]=","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"},{"name":"applicator","doc":null,"default_value":"","external_name":"applicator","restriction":"F"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"l = range.begin\nr = range.exclusive? ? range.end : range.end + 1\napply_range(l, r, applicator, 0, 0...(@segments.size + 1))\napplicator\n"}},{"id":"all_prod-instance-method","html_id":"all_prod-instance-method","name":"all_prod","doc":"Implements atcoder::lazy_segtree.all_prod().","summary":"<p>Implements atcoder::lazy_segtree.all_prod().</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L214","def":{"name":"all_prod","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[0...@values.size]"}},{"id":"apply_range(a:Int,b:Int,f:F,segment_index:Int,range:Range(Int,Int))-instance-method","html_id":"apply_range(a:Int,b:Int,f:F,segment_index:Int,range:Range(Int,Int))-instance-method","name":"apply_range","doc":"Applies applicator `f` onto segment, whose range is `range`. `range` is exclusive here.","summary":"<p>Applies applicator <code>f</code> onto segment, whose range is <code>range</code>.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"},{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"F"},{"name":"segment_index","doc":null,"default_value":"","external_name":"segment_index","restriction":"Int"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"args_string":"(a : Int, b : Int, f : F, segment_index : Int, range : Range(Int, Int))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L152","def":{"name":"apply_range","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"},{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"F"},{"name":"segment_index","doc":null,"default_value":"","external_name":"segment_index","restriction":"Int"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if segment_index >= (@segments.size + @values.size)\n  return nil\nend\nif segment_index < @segments.size\n  eval_segment(segment_index, range)\nend\nif range.end <= a || b <= range.begin\n  if segment_index < @segments.size\n    return @segments[segment_index]\n  else\n    return @values[segment_index - @segments.size]\n  end\nend\nif a <= range.begin && range.end <= b\n  if segment_index < @segments.size\n    @applicators[segment_index] = compose(@applicators[segment_index], f)\n    eval_segment(segment_index, range)\n    return @segments[segment_index]\n  else\n    @values[segment_index - @segments.size] = apply(f, @values[segment_index - @segments.size])\n    return @values[segment_index - @segments.size]\n  end\nend\nrange_median = (range.begin + range.end) // 2\nchild1 = apply_range(a, b, f, (segment_index * 2) + 1, range.begin...range_median)\nchild2 = apply_range(a, b, f, (segment_index * 2) + 2, range_median...range.end)\n@segments[segment_index] = operate(child1, child2)\n@segments[segment_index]\n"}},{"id":"eval_segment(segment_index:Int,range:Range(Int,Int))-instance-method","html_id":"eval_segment(segment_index:Int,range:Range(Int,Int))-instance-method","name":"eval_segment","doc":"Evaluates segment, whose range is `range`. `range` is exclusive here.\n\nPreconditions:\n* segment_index < @segments.size\n* range.end - range.begin > 1","summary":"<p>Evaluates segment, whose range is <code>range</code>.</p>","abstract":false,"args":[{"name":"segment_index","doc":null,"default_value":"","external_name":"segment_index","restriction":"Int"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"args_string":"(segment_index : Int, range : Range(Int, Int))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L134","def":{"name":"eval_segment","args":[{"name":"segment_index","doc":null,"default_value":"","external_name":"segment_index","restriction":"Int"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"applicator = @applicators[segment_index]\nif applicator.nil?\n  return\nend\n@segments[segment_index] = apply(applicator, @segments[segment_index])\nif (range.end - range.begin) > 2\n  @applicators[(segment_index * 2) + 1] = compose(applicator, @applicators[(segment_index * 2) + 1])\n  @applicators[(segment_index * 2) + 2] = compose(applicator, @applicators[(segment_index * 2) + 2])\nelse\n  @values[((segment_index * 2) + 1) - @segments.size] = apply(applicator, @values[((segment_index * 2) + 1) - @segments.size])\n  @values[((segment_index * 2) + 2) - @segments.size] = apply(applicator, @values[((segment_index * 2) + 2) - @segments.size])\nend\n@applicators[segment_index] = nil\n"}},{"id":"get_range(a:Int,b:Int,segment_index:Int,range:Range(Int,Int))-instance-method","html_id":"get_range(a:Int,b:Int,segment_index:Int,range:Range(Int,Int))-instance-method","name":"get_range","doc":"Gets evaluated value of a segment, whose range is `range`. `range` is exclusive here.","summary":"<p>Gets evaluated value of a segment, whose range is <code>range</code>.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"},{"name":"segment_index","doc":null,"default_value":"","external_name":"segment_index","restriction":"Int"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"args_string":"(a : Int, b : Int, segment_index : Int, range : Range(Int, Int))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L189","def":{"name":"get_range","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"},{"name":"segment_index","doc":null,"default_value":"","external_name":"segment_index","restriction":"Int"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if range.end <= a || b <= range.begin\n  return nil\nend\nif segment_index < @segments.size\n  eval_segment(segment_index, range)\nend\nif a <= range.begin && range.end <= b\n  if segment_index < @segments.size\n    return @segments[segment_index]\n  else\n    return @values[segment_index - @segments.size]\n  end\nend\nrange_median = (range.begin + range.end) // 2\nchild1 = get_range(a, b, (segment_index * 2) + 1, range.begin...range_median)\nchild2 = get_range(a, b, (segment_index * 2) + 2, range_median...range.end)\noperate(child1, child2)\n"}},{"id":"max_left-instance-method","html_id":"max_left-instance-method","name":"max_left","doc":"FIXME: Unimplemented","summary":"<p><span class=\"flag yellow\">FIXME</span>  Unimplemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L224","def":{"name":"max_left","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new)"}},{"id":"max_right-instance-method","html_id":"max_right-instance-method","name":"max_right","doc":"FIXME: Unimplemented","summary":"<p><span class=\"flag yellow\">FIXME</span>  Unimplemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L219","def":{"name":"max_right","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new)"}},{"id":"set-instance-method","html_id":"set-instance-method","name":"set","doc":"FIXME: Unimplemented","summary":"<p><span class=\"flag yellow\">FIXME</span>  Unimplemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L66","def":{"name":"set","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new)"}},{"id":"values:Array(S?)-instance-method","html_id":"values:Array(S?)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(S?)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/lazy_seg_tree.cr#L38","def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(S | Nil)","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/Math","path":"AtCoder/Math.html","kind":"module","full_name":"AtCoder::Math","name":"Math","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"math.cr","line_number":21,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [ACL's Math library](https://atcoder.github.io/ac-library/master/document_en/math.html)","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/math.html\" target=\"_blank\">ACL's Math library</a></p>","class_methods":[{"id":"crt(remainders,modulos)-class-method","html_id":"crt(remainders,modulos)-class-method","name":"crt","doc":"Implements atcoder::crt(remainders, modulos).","summary":"<p>Implements atcoder::crt(remainders, modulos).</p>","abstract":false,"args":[{"name":"remainders","doc":null,"default_value":"","external_name":"remainders","restriction":""},{"name":"modulos","doc":null,"default_value":"","external_name":"modulos","restriction":""}],"args_string":"(remainders, modulos)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr#L110","def":{"name":"crt","args":[{"name":"remainders","doc":null,"default_value":"","external_name":"remainders","restriction":""},{"name":"modulos","doc":null,"default_value":"","external_name":"modulos","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if remainders.size == modulos.size\nelse\n  raise(ArgumentError.new)\nend\ntotal_modulo = 1_i64\nanswer = 0_i64\n(remainders.zip(modulos)).each do |__arg0|\n  remainder = __arg0[0]\n  modulo = __arg0[1]\n  gcd, p = extended_gcd(total_modulo, modulo)\n  if ((remainder - answer) % gcd) != 0\n    return {0_i64, 0_i64}\n  end\n  tmp = (((remainder - answer) // gcd) * p) % (modulo // gcd)\n  answer = answer + (total_modulo * tmp)\n  total_modulo = total_modulo * (modulo // gcd)\nend\nreturn {answer % total_modulo, total_modulo}\n"}},{"id":"extended_gcd(a,b)-class-method","html_id":"extended_gcd(a,b)-class-method","name":"extended_gcd","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr#L22","def":{"name":"extended_gcd","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"last_remainder, remainder = a.abs, b.abs\nx, last_x, y, last_y = 0_i64, 1_i64, 1_i64, 0_i64\nwhile remainder != 0\n  new_last_remainder = remainder\n  quotient, remainder = last_remainder.divmod(remainder)\n  last_remainder = new_last_remainder\n  x, last_x = last_x - (quotient * x), x\n  y, last_y = last_y - (quotient * y), y\nend\nreturn {last_remainder, last_x * (a < 0 ? -1 : 1)}\n"}},{"id":"floor_sum(n,m,a,b)-class-method","html_id":"floor_sum(n,m,a,b)-class-method","name":"floor_sum","doc":"Implements atcoder::floor_sum(n, m, a, b).","summary":"<p>Implements atcoder::floor_sum(n, m, a, b).</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(n, m, a, b)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr#L130","def":{"name":"floor_sum","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n, m, a, b = n.to_i64, m.to_i64, a.to_i64, b.to_i64\nres = 0_i64\nif a < 0\n  a2 = a % m\n  res = res - (((n * (n - 1)) // 2) * ((a2 - a) // m))\n  a = a2\nend\nif b < 0\n  b2 = b % m\n  res = res - (n * ((b2 - b) // m))\n  b = b2\nend\nres + (floor_sum_unsigned(n, m, a, b))\n"}},{"id":"get_primitive_root(p:Int)-class-method","html_id":"get_primitive_root(p:Int)-class-method","name":"get_primitive_root","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Int"}],"args_string":"(p : Int)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr#L179","def":{"name":"get_primitive_root","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if p == 2\n  return 1_i64\nend\nn = p - 1\nfactors = AtCoder::Prime.prime_division(n)\n(2_i64..p.to_i64).each do |g|\n  ok = true\n  factors.each do |__arg1|\n    factor = __arg1[0]\n    if (pow_mod(g, n // factor, p)) == 1\n      ok = false\n      break\n    end\n  end\n  if ok\n    return g\n  end\nend\nraise(ArgumentError.new)\n"}},{"id":"inv_mod(value,modulo)-class-method","html_id":"inv_mod(value,modulo)-class-method","name":"inv_mod","doc":"Implements atcoder::inv_mod(value, modulo).","summary":"<p>Implements atcoder::inv_mod(value, modulo).</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"modulo","doc":null,"default_value":"","external_name":"modulo","restriction":""}],"args_string":"(value, modulo)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr#L37","def":{"name":"inv_mod","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"modulo","doc":null,"default_value":"","external_name":"modulo","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"gcd, inv = extended_gcd(value, modulo)\nif gcd != 1\n  raise(ArgumentError.new(\"#{value} and #{modulo} are not coprime\"))\nend\ninv % modulo\n"}},{"id":"mul_mod(a:Int64,b:Int64,mod:Int64)-class-method","html_id":"mul_mod(a:Int64,b:Int64,mod:Int64)-class-method","name":"mul_mod","doc":"Caluculates a * b % mod without overflow detection","summary":"<p>Caluculates a * b % mod without overflow detection</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int64"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int64"},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":"Int64"}],"args_string":"(a : Int64, b : Int64, mod : Int64)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr#L68","def":{"name":"mul_mod","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int64"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int64"},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if mod < Int32::MAX\n  return (a * b) % mod\nend\na_high = (a >> 32).to_u64\na_low = (a & 4294967295_i64).to_u64\nb_high = (b >> 32).to_u64\nb_low = (b & 4294967295_i64).to_u64\nc = (a_high * b_low) + (b_high * a_low)\nc_high = c >> 32\nc_low = c & 4294967295_i64\nres_high = (a_high * b_high) + c_high\nres_low = a_low * b_low\nres_low_high = res_low >> 32\nres_low_low = res_low & 4294967295_i64\nif (res_low_high + c_low) >= 4294967296_i64\n  res_high = res_high + 1\nend\nres_low = (((res_low_high + c_low) & 4294967295_i64) << 32) | res_low_low\n(((res_high.to_i128 << 64) | res_low) % mod).to_i64\n"}},{"id":"mul_mod(a,b,mod)-class-method","html_id":"mul_mod(a,b,mod)-class-method","name":"mul_mod","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":""}],"args_string":"(a, b, mod)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr#L105","def":{"name":"mul_mod","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(typeof(mod)).new((a.to_i64 * b) % mod)"}},{"id":"pow_mod(base,exponent,modulo)-class-method","html_id":"pow_mod(base,exponent,modulo)-class-method","name":"pow_mod","doc":"Simplified AtCoder::Math.pow_mod with support of Int64","summary":"<p>Simplified AtCoder::Math.pow_mod with support of Int64</p>","abstract":false,"args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":""},{"name":"exponent","doc":null,"default_value":"","external_name":"exponent","restriction":""},{"name":"modulo","doc":null,"default_value":"","external_name":"modulo","restriction":""}],"args_string":"(base, exponent, modulo)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr#L46","def":{"name":"pow_mod","args":[{"name":"base","doc":null,"default_value":"","external_name":"base","restriction":""},{"name":"exponent","doc":null,"default_value":"","external_name":"exponent","restriction":""},{"name":"modulo","doc":null,"default_value":"","external_name":"modulo","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if exponent == 0\n  return base.class.zero + 1\nend\nif base == 0\n  return base\nend\nb = exponent > 0 ? base : inv_mod(base, modulo)\ne = exponent.abs\nret = 1_i64\nwhile e > 0\n  if (e % 2) == 1\n    ret = mul_mod(ret, b, modulo)\n  end\n  b = mul_mod(b, b, modulo)\n  e = e // 2\nend\nret\n"}},{"id":"product_greater_than(a:Int,b:Int,target:Int)-class-method","html_id":"product_greater_than(a:Int,b:Int,target:Int)-class-method","name":"product_greater_than","doc":"Returns `a * b > target`, without concern of overflows.","summary":"<p>Returns <code>a * b > target</code>, without concern of overflows.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Int"}],"args_string":"(a : Int, b : Int, target : Int)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/math.cr#L175","def":{"name":"product_greater_than","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(target // b) < a"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/MaxFlow","path":"AtCoder/MaxFlow.html","kind":"class","full_name":"AtCoder::MaxFlow","name":"MaxFlow","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"max_flow.cr","line_number":28,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [atcoder::mf_graph](https://atcoder.github.io/ac-library/master/document_en/maxflow.html).\n`Cap` is always `Int64`.\n\n```\nmf = AtCoder::MaxFlow.new(3)\nmf.add_edge(0, 1, 3)\nmf.add_edge(1, 2, 1)\nmf.add_edge(0, 2, 2)\nmf.flow(0, 2) # => 3\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/maxflow.html\" target=\"_blank\">atcoder::mf_graph</a>.</p>","class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L49","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(from,to,capacity)-instance-method","html_id":"add_edge(from,to,capacity)-instance-method","name":"add_edge","doc":"Implements atcoder::mf_graph.add_edge(from, to, capacity).","summary":"<p>Implements atcoder::mf_graph.add_edge(from, to, capacity).</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":""}],"args_string":"(from, to, capacity)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L56","def":{"name":"add_edge","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"from_index = @adjacencies[from].size.to_i64\nto_index = @adjacencies[to].size.to_i64\n@adjacencies[from] << (Edge.new(to.to_i64, capacity.to_i64, to_index))\n@adjacencies[to] << (Edge.new(from.to_i64, 0_i64, from_index))\n"}},{"id":"adjacencies:Array(Array(Edge))-instance-method","html_id":"adjacencies:Array(Array(Edge))-instance-method","name":"adjacencies","doc":"Adjacency list","summary":"<p>Adjacency list</p>","abstract":false,"args":[],"args_string":" : Array(Array(Edge))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L42","def":{"name":"adjacencies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Array(Edge))","visibility":"Public","body":"@adjacencies"}},{"id":"change_edge-instance-method","html_id":"change_edge-instance-method","name":"change_edge","doc":"FIXME: Unimplemented","summary":"<p><span class=\"flag yellow\">FIXME</span>  Unimplemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L97","def":{"name":"change_edge","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new)"}},{"id":"depths:Array(Int64)-instance-method","html_id":"depths:Array(Int64)-instance-method","name":"depths","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int64)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L44","def":{"name":"depths","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int64)","visibility":"Public","body":"@depths"}},{"id":"edges-instance-method","html_id":"edges-instance-method","name":"edges","doc":"FIXME: Unimplemented","summary":"<p><span class=\"flag yellow\">FIXME</span>  Unimplemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L92","def":{"name":"edges","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new)"}},{"id":"flow(start,target)-instance-method","html_id":"flow(start,target)-instance-method","name":"flow","doc":"Implements atcoder::mf_graph.flow(start, target).","summary":"<p>Implements atcoder::mf_graph.flow(start, target).</p>","abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"args_string":"(start, target)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L65","def":{"name":"flow","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"flow = 0_i64\nloop do\n  bfs(start)\n  if @depths[target] < 0\n    return flow\n  end\n  @visit_counts.fill(0_i64)\n  while (flowed = dfs(start, target, Int64::MAX)) > 0\n    flow = flow + flowed\n  end\nend\n"}},{"id":"get_edge-instance-method","html_id":"get_edge-instance-method","name":"get_edge","doc":"FIXME: Unimplemented","summary":"<p><span class=\"flag yellow\">FIXME</span>  Unimplemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L87","def":{"name":"get_edge","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new)"}},{"id":"min_cut-instance-method","html_id":"min_cut-instance-method","name":"min_cut","doc":"FIXME: Unimplemented","summary":"<p><span class=\"flag yellow\">FIXME</span>  Unimplemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L82","def":{"name":"min_cut","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new)"}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":"Number of nodes","summary":"<p>Number of nodes</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L39","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@size"}},{"id":"visit_counts:Array(Int64)-instance-method","html_id":"visit_counts:Array(Int64)-instance-method","name":"visit_counts","doc":"Number of visited adjacencies for each nodes","summary":"<p>Number of visited adjacencies for each nodes</p>","abstract":false,"args":[],"args_string":" : Array(Int64)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L47","def":{"name":"visit_counts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int64)","visibility":"Public","body":"@visit_counts"}}],"macros":[],"types":[{"html_id":"github.com/google/ac-library.cr/AtCoder/MaxFlow/Edge","path":"AtCoder/MaxFlow/Edge.html","kind":"class","full_name":"AtCoder::MaxFlow::Edge","name":"Edge","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"max_flow.cr","line_number":29,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder/MaxFlow","kind":"class","full_name":"AtCoder::MaxFlow","name":"MaxFlow"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(to,capacity,reverse_index)-class-method","html_id":"new(to,capacity,reverse_index)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":""},{"name":"reverse_index","doc":null,"default_value":"","external_name":"reverse_index","restriction":""}],"args_string":"(to, capacity, reverse_index)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L34","def":{"name":"new","args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":""},{"name":"reverse_index","doc":null,"default_value":"","external_name":"reverse_index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(to, capacity, reverse_index)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"capacity:Int64-instance-method","html_id":"capacity:Int64-instance-method","name":"capacity","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L32","def":{"name":"capacity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@capacity"}},{"id":"capacity=(capacity:Int64)-instance-method","html_id":"capacity=(capacity:Int64)-instance-method","name":"capacity=","doc":null,"summary":null,"abstract":false,"args":[{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"Int64"}],"args_string":"(capacity : Int64)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L32","def":{"name":"capacity=","args":[{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@capacity = capacity"}},{"id":"reverse_index:Int64-instance-method","html_id":"reverse_index:Int64-instance-method","name":"reverse_index","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L31","def":{"name":"reverse_index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@reverse_index"}},{"id":"to:Int64-instance-method","html_id":"to:Int64-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/max_flow.cr#L30","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@to"}}],"macros":[],"types":[]}]},{"html_id":"github.com/google/ac-library.cr/AtCoder/MinCostFlow","path":"AtCoder/MinCostFlow.html","kind":"class","full_name":"AtCoder::MinCostFlow","name":"MinCostFlow","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"min_cost_flow.cr","line_number":33,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/min_cost_flow.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [atcoder::mcf_graph](https://atcoder.github.io/ac-library/master/document_en/mincostflow.html).\n\n```\nflow = AtCoder::MinCostFlow.new(5)\nflow.add_edge(0, 1, 30, 3)\nflow.add_edge(0, 2, 60, 9)\nflow.add_edge(1, 2, 40, 5)\nflow.add_edge(1, 3, 50, 7)\nflow.add_edge(2, 3, 20, 8)\nflow.add_edge(2, 4, 50, 6)\nflow.add_edge(3, 4, 60, 7)\nflow.flow(0, 4, 70) # => {70, 1080}\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/mincostflow.html\" target=\"_blank\">atcoder::mcf_graph</a>.</p>","class_methods":[],"constructors":[{"id":"new(size:Int64)-class-method","html_id":"new(size:Int64)-class-method","name":"new","doc":"Implements atcoder::mcf_graph g(n).","summary":"<p>Implements atcoder::mcf_graph g(n).</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"}],"args_string":"(size : Int64)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/min_cost_flow.cr#L71","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(from,to,capacity,cost)-instance-method","html_id":"add_edge(from,to,capacity,cost)-instance-method","name":"add_edge","doc":"Implements atcoder::mcf_graph.add_edge(from, to, capacity, cost).","summary":"<p>Implements atcoder::mcf_graph.add_edge(from, to, capacity, cost).</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":""},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":""}],"args_string":"(from, to, capacity, cost)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/min_cost_flow.cr#L78","def":{"name":"add_edge","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":""},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.add_edge(from, to, EdgeInfo.new(capacity.to_i64, cost.to_i64))\n@graph.add_edge(to, from, EdgeInfo.new(0_i64, -cost.to_i64))\n@edges << {from.to_i64, to.to_i64}\n"}},{"id":"flow(start,target,flow_limit:Int?=nil)-instance-method","html_id":"flow(start,target,flow_limit:Int?=nil)-instance-method","name":"flow","doc":"Implements atcoder::mcf_graph.flow(start, target, flow_limit).","summary":"<p>Implements atcoder::mcf_graph.flow(start, target, flow_limit).</p>","abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""},{"name":"flow_limit","doc":null,"default_value":"nil","external_name":"flow_limit","restriction":"Int | Nil"}],"args_string":"(start, target, flow_limit : Int? = <span class=\"n\">nil</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/min_cost_flow.cr#L177","def":{"name":"flow","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""},{"name":"flow_limit","doc":null,"default_value":"nil","external_name":"flow_limit","restriction":"Int | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"flow_points = slope(start, target, flow_limit)\nflow_points.last\n"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/min_cost_flow.cr#L187","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options)"}},{"id":"size(*args,**options,&)-instance-method","html_id":"size(*args,**options,&amp;)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/min_cost_flow.cr#L187","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"slope(start,target,flow_limit:Int?=nil)-instance-method","html_id":"slope(start,target,flow_limit:Int?=nil)-instance-method","name":"slope","doc":"Implements atcoder::mcf_graph.slope(start, target, flow_limit).\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>Implements atcoder::mcf_graph.slope(start, target, flow_limit).</p>","abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""},{"name":"flow_limit","doc":null,"default_value":"nil","external_name":"flow_limit","restriction":"Int | Nil"}],"args_string":"(start, target, flow_limit : Int? = <span class=\"n\">nil</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/min_cost_flow.cr#L96","def":{"name":"slope","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""},{"name":"flow_limit","doc":null,"default_value":"nil","external_name":"flow_limit","restriction":"Int | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if start == target\n  raise(ArgumentError.new(\"start and target cannot be the same\"))\nend\nflow_points = [] of ::Tuple(Int64, Int64)\ncurrent_cost = 0_i64\nflowed_capacity = 0_i64\nmin_cost = 0_i64\nwhile !(flowed_capacity == flow_limit)\n  nodes = @graph.dijkstra(start)\n  target_dist = nodes[target][:dist]\n  if target_dist.nil? || (target_dist.capacity == 0)\n    break\n  end\n  capacity = target_dist.capacity\n  last_node = target\n  while !(last_node == start)\n    prev_node = nodes[last_node][:prev].not_nil!\n    increment_edge_capacity(prev_node, last_node, -capacity)\n    increment_edge_capacity(last_node, prev_node, capacity)\n    last_node = prev_node\n  end\n  @edges.each do |from, to|\n    from_dist = nodes[from][:dist]\n    to_dist = nodes[to][:dist]\n    if from_dist.nil? || to_dist.nil?\n      next\n    end\n    if from_dist.cost.nil? || to_dist.cost.nil?\n      next\n    end\n    dist = to_dist.cost.not_nil! - from_dist.cost.not_nil!\n    increment_edge_cost(from, to, -dist)\n    increment_edge_cost(to, from, dist)\n  end\n  nodes.each_with_index do |node, i|\n    dist = node[:dist]\n    if (dist.nil? || @dists[i].nil?) || dist.not_nil!.cost.nil?\n      @dists[i] = nil\n    else\n      @dists[i] = @dists[i].not_nil! + dist.not_nil!.cost.not_nil!\n    end\n  end\n  new_cost = @dists[target].not_nil!\n  if flow_limit.nil?\n    new_capacity = capacity\n  else\n    new_capacity = min(capacity, flow_limit - flowed_capacity)\n  end\n  if new_cost != current_cost\n    if (current_cost == 0) && (flowed_capacity != 0)\n      flow_points << {0_i64, 0_i64}\n    end\n    flow_points << {flowed_capacity, min_cost}\n  end\n  min_cost = min_cost + (new_cost * new_capacity)\n  flowed_capacity = flowed_capacity + new_capacity\n  current_cost = new_cost\nend\nflow_points << {flowed_capacity, min_cost}\nflow_points\n"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/ModInt1000000007","path":"AtCoder/ModInt1000000007.html","kind":"struct","full_name":"AtCoder::ModInt1000000007","name":"ModInt1000000007","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/google/ac-library.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mod_int.cr","line_number":225,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MOD","name":"MOD","value":"1000000007_i64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements atcoder::modint1000000007_i64.\n\n```\nalias Mint = AtCoder::ModInt1000000007\nMint.new(30_i64) // Mint.new(7_i64)\n```","summary":"<p>Implements atcoder::modint1000000007_i64.</p>","class_methods":[{"id":"combination(n,k)-class-method","html_id":"combination(n,k)-class-method","name":"combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(permutation(n, k)) // @@factorials[k]\n"}},{"id":"factorial(n)-class-method","html_id":"factorial(n)-class-method","name":"factorial","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"factorial","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@factorials.empty?\n  @@factorials << (self.new(1_i64))\nend\n@@factorials.size.upto(n) do |i|\n  @@factorials << (@@factorials.last * i)\nend\n@@factorials[n]\n"}},{"id":"permutation(n,k)-class-method","html_id":"permutation(n,k)-class-method","name":"permutation","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"permutation","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(factorial(n)) // (factorial(n - k))\n"}},{"id":"repeated_combination(n,k)-class-method","html_id":"repeated_combination(n,k)-class-method","name":"repeated_combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"repeated_combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"combination((n + k) - 1, k)"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(0_i64)"}}],"constructors":[{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(value)-instance-method","html_id":"*(value)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value * (value.to_i64 % MOD))"}},{"id":"**(value)-instance-method","html_id":"**(value)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"**","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(AtCoder::Math.pow_mod(@value, value.to_i64, MOD))"}},{"id":"+(value)-instance-method","html_id":"+(value)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value + (value.to_i64 % MOD))"}},{"id":"+-instance-method","html_id":"+-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"-(value)-instance-method","html_id":"-(value)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value - (value.to_i64 % MOD))"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.class.new(0_i64)) - self"}},{"id":"/(value:self)-instance-method","html_id":"/(value:self)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * value.inv\n"}},{"id":"/(value)-instance-method","html_id":"/(value)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * (self.class.new(value.to_i64)).inv\n"}},{"id":"//(value)-instance-method","html_id":"//(value)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / value"}},{"id":"<(value)-instance-method","html_id":"&lt;(value)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<<(value)-instance-method","html_id":"&lt;&lt;(value)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * ((self.class.new(2_i64)) ** value)"}},{"id":"<=(value)-instance-method","html_id":"&lt;=(value)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"<=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":"==(value)-instance-method","html_id":"==(value)-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value"}},{"id":"==(value:self)-instance-method","html_id":"==(value:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value.to_i64"}},{"id":">(value)-instance-method","html_id":"&gt;(value)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":">","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">=(value)-instance-method","html_id":"&gt;=(value)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":">=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":"abs-instance-method","html_id":"abs-instance-method","name":"abs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"inspect(*args,**options)-instance-method","html_id":"inspect(*args,**options)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options)"}},{"id":"inspect(*args,**options,&)-instance-method","html_id":"inspect(*args,**options,&amp;)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"inv-instance-method","html_id":"inv-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"g, x = AtCoder::Math.extended_gcd(@value, MOD)\nself.class.new(x)\n"}},{"id":"pow(value)-instance-method","html_id":"pow(value)-instance-method","name":"pow","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"pow","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self ** value"}},{"id":"sqrt-instance-method","html_id":"sqrt-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"sqrt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"z = self.class.new(1_i64)\nwhile !((z ** ((MOD - 1) // 2)) == (MOD - 1))\n  z = z + 1\nend\nq = MOD - 1\nm = 0\nwhile (q % 2) == 0\n  q = q // 2\n  m = m + 1\nend\nc = z ** q\nt = self ** q\nr = self ** ((q + 1) // 2)\nm.downto(2) do |i|\n  tmp = t ** (2 ** (i - 2))\n  if tmp != 1\n    r = r * c\n    t = t * (c ** 2)\n  end\n  c = c * c\nend\nif (r * r) == self\n  (r.to_i64 * 2) <= MOD ? r : -r\nelse\n  nil\nend\n"}},{"id":"to_i64:Int64-instance-method","html_id":"to_i64:Int64-instance-method","name":"to_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&)-instance-method","html_id":"to_s(*args,**options,&amp;)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"val-instance-method","html_id":"val-instance-method","name":"val","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"val","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.to_i64"}},{"id":"value:Int64-instance-method","html_id":"value:Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/ModInt167772161","path":"AtCoder/ModInt167772161.html","kind":"struct","full_name":"AtCoder::ModInt167772161","name":"ModInt167772161","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/google/ac-library.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mod_int.cr","line_number":228,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MOD","name":"MOD","value":"167772161_i64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements atcoder::modint167772161_i64.\n\n```\nalias Mint = AtCoder::ModInt167772161\nMint.new(30_i64) // Mint.new(7_i64)\n```","summary":"<p>Implements atcoder::modint167772161_i64.</p>","class_methods":[{"id":"combination(n,k)-class-method","html_id":"combination(n,k)-class-method","name":"combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(permutation(n, k)) // @@factorials[k]\n"}},{"id":"factorial(n)-class-method","html_id":"factorial(n)-class-method","name":"factorial","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"factorial","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@factorials.empty?\n  @@factorials << (self.new(1_i64))\nend\n@@factorials.size.upto(n) do |i|\n  @@factorials << (@@factorials.last * i)\nend\n@@factorials[n]\n"}},{"id":"permutation(n,k)-class-method","html_id":"permutation(n,k)-class-method","name":"permutation","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"permutation","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(factorial(n)) // (factorial(n - k))\n"}},{"id":"repeated_combination(n,k)-class-method","html_id":"repeated_combination(n,k)-class-method","name":"repeated_combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"repeated_combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"combination((n + k) - 1, k)"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(0_i64)"}}],"constructors":[{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(value)-instance-method","html_id":"*(value)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value * (value.to_i64 % MOD))"}},{"id":"**(value)-instance-method","html_id":"**(value)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"**","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(AtCoder::Math.pow_mod(@value, value.to_i64, MOD))"}},{"id":"+(value)-instance-method","html_id":"+(value)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value + (value.to_i64 % MOD))"}},{"id":"+-instance-method","html_id":"+-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"-(value)-instance-method","html_id":"-(value)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value - (value.to_i64 % MOD))"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.class.new(0_i64)) - self"}},{"id":"/(value:self)-instance-method","html_id":"/(value:self)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * value.inv\n"}},{"id":"/(value)-instance-method","html_id":"/(value)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * (self.class.new(value.to_i64)).inv\n"}},{"id":"//(value)-instance-method","html_id":"//(value)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / value"}},{"id":"<(value)-instance-method","html_id":"&lt;(value)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<<(value)-instance-method","html_id":"&lt;&lt;(value)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * ((self.class.new(2_i64)) ** value)"}},{"id":"<=(value)-instance-method","html_id":"&lt;=(value)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"<=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":"==(value)-instance-method","html_id":"==(value)-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value"}},{"id":"==(value:self)-instance-method","html_id":"==(value:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value.to_i64"}},{"id":">(value)-instance-method","html_id":"&gt;(value)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":">","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">=(value)-instance-method","html_id":"&gt;=(value)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":">=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":"abs-instance-method","html_id":"abs-instance-method","name":"abs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"inspect(*args,**options)-instance-method","html_id":"inspect(*args,**options)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options)"}},{"id":"inspect(*args,**options,&)-instance-method","html_id":"inspect(*args,**options,&amp;)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"inv-instance-method","html_id":"inv-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"g, x = AtCoder::Math.extended_gcd(@value, MOD)\nself.class.new(x)\n"}},{"id":"pow(value)-instance-method","html_id":"pow(value)-instance-method","name":"pow","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"pow","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self ** value"}},{"id":"sqrt-instance-method","html_id":"sqrt-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"sqrt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"z = self.class.new(1_i64)\nwhile !((z ** ((MOD - 1) // 2)) == (MOD - 1))\n  z = z + 1\nend\nq = MOD - 1\nm = 0\nwhile (q % 2) == 0\n  q = q // 2\n  m = m + 1\nend\nc = z ** q\nt = self ** q\nr = self ** ((q + 1) // 2)\nm.downto(2) do |i|\n  tmp = t ** (2 ** (i - 2))\n  if tmp != 1\n    r = r * c\n    t = t * (c ** 2)\n  end\n  c = c * c\nend\nif (r * r) == self\n  (r.to_i64 * 2) <= MOD ? r : -r\nelse\n  nil\nend\n"}},{"id":"to_i64:Int64-instance-method","html_id":"to_i64:Int64-instance-method","name":"to_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&)-instance-method","html_id":"to_s(*args,**options,&amp;)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"val-instance-method","html_id":"val-instance-method","name":"val","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"val","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.to_i64"}},{"id":"value:Int64-instance-method","html_id":"value:Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/ModInt469762049","path":"AtCoder/ModInt469762049.html","kind":"struct","full_name":"AtCoder::ModInt469762049","name":"ModInt469762049","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/google/ac-library.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mod_int.cr","line_number":229,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MOD","name":"MOD","value":"469762049_i64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements atcoder::modint469762049_i64.\n\n```\nalias Mint = AtCoder::ModInt469762049\nMint.new(30_i64) // Mint.new(7_i64)\n```","summary":"<p>Implements atcoder::modint469762049_i64.</p>","class_methods":[{"id":"combination(n,k)-class-method","html_id":"combination(n,k)-class-method","name":"combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(permutation(n, k)) // @@factorials[k]\n"}},{"id":"factorial(n)-class-method","html_id":"factorial(n)-class-method","name":"factorial","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"factorial","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@factorials.empty?\n  @@factorials << (self.new(1_i64))\nend\n@@factorials.size.upto(n) do |i|\n  @@factorials << (@@factorials.last * i)\nend\n@@factorials[n]\n"}},{"id":"permutation(n,k)-class-method","html_id":"permutation(n,k)-class-method","name":"permutation","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"permutation","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(factorial(n)) // (factorial(n - k))\n"}},{"id":"repeated_combination(n,k)-class-method","html_id":"repeated_combination(n,k)-class-method","name":"repeated_combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"repeated_combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"combination((n + k) - 1, k)"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(0_i64)"}}],"constructors":[{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(value)-instance-method","html_id":"*(value)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value * (value.to_i64 % MOD))"}},{"id":"**(value)-instance-method","html_id":"**(value)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"**","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(AtCoder::Math.pow_mod(@value, value.to_i64, MOD))"}},{"id":"+(value)-instance-method","html_id":"+(value)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value + (value.to_i64 % MOD))"}},{"id":"+-instance-method","html_id":"+-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"-(value)-instance-method","html_id":"-(value)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value - (value.to_i64 % MOD))"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.class.new(0_i64)) - self"}},{"id":"/(value:self)-instance-method","html_id":"/(value:self)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * value.inv\n"}},{"id":"/(value)-instance-method","html_id":"/(value)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * (self.class.new(value.to_i64)).inv\n"}},{"id":"//(value)-instance-method","html_id":"//(value)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / value"}},{"id":"<(value)-instance-method","html_id":"&lt;(value)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<<(value)-instance-method","html_id":"&lt;&lt;(value)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * ((self.class.new(2_i64)) ** value)"}},{"id":"<=(value)-instance-method","html_id":"&lt;=(value)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"<=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":"==(value)-instance-method","html_id":"==(value)-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value"}},{"id":"==(value:self)-instance-method","html_id":"==(value:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value.to_i64"}},{"id":">(value)-instance-method","html_id":"&gt;(value)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":">","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">=(value)-instance-method","html_id":"&gt;=(value)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":">=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":"abs-instance-method","html_id":"abs-instance-method","name":"abs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"inspect(*args,**options)-instance-method","html_id":"inspect(*args,**options)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options)"}},{"id":"inspect(*args,**options,&)-instance-method","html_id":"inspect(*args,**options,&amp;)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"inv-instance-method","html_id":"inv-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"g, x = AtCoder::Math.extended_gcd(@value, MOD)\nself.class.new(x)\n"}},{"id":"pow(value)-instance-method","html_id":"pow(value)-instance-method","name":"pow","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"pow","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self ** value"}},{"id":"sqrt-instance-method","html_id":"sqrt-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"sqrt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"z = self.class.new(1_i64)\nwhile !((z ** ((MOD - 1) // 2)) == (MOD - 1))\n  z = z + 1\nend\nq = MOD - 1\nm = 0\nwhile (q % 2) == 0\n  q = q // 2\n  m = m + 1\nend\nc = z ** q\nt = self ** q\nr = self ** ((q + 1) // 2)\nm.downto(2) do |i|\n  tmp = t ** (2 ** (i - 2))\n  if tmp != 1\n    r = r * c\n    t = t * (c ** 2)\n  end\n  c = c * c\nend\nif (r * r) == self\n  (r.to_i64 * 2) <= MOD ? r : -r\nelse\n  nil\nend\n"}},{"id":"to_i64:Int64-instance-method","html_id":"to_i64:Int64-instance-method","name":"to_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&)-instance-method","html_id":"to_s(*args,**options,&amp;)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"val-instance-method","html_id":"val-instance-method","name":"val","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"val","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.to_i64"}},{"id":"value:Int64-instance-method","html_id":"value:Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/ModInt754974721","path":"AtCoder/ModInt754974721.html","kind":"struct","full_name":"AtCoder::ModInt754974721","name":"ModInt754974721","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/google/ac-library.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mod_int.cr","line_number":227,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MOD","name":"MOD","value":"754974721_i64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements atcoder::modint754974721_i64.\n\n```\nalias Mint = AtCoder::ModInt754974721\nMint.new(30_i64) // Mint.new(7_i64)\n```","summary":"<p>Implements atcoder::modint754974721_i64.</p>","class_methods":[{"id":"combination(n,k)-class-method","html_id":"combination(n,k)-class-method","name":"combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(permutation(n, k)) // @@factorials[k]\n"}},{"id":"factorial(n)-class-method","html_id":"factorial(n)-class-method","name":"factorial","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"factorial","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@factorials.empty?\n  @@factorials << (self.new(1_i64))\nend\n@@factorials.size.upto(n) do |i|\n  @@factorials << (@@factorials.last * i)\nend\n@@factorials[n]\n"}},{"id":"permutation(n,k)-class-method","html_id":"permutation(n,k)-class-method","name":"permutation","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"permutation","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(factorial(n)) // (factorial(n - k))\n"}},{"id":"repeated_combination(n,k)-class-method","html_id":"repeated_combination(n,k)-class-method","name":"repeated_combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"repeated_combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"combination((n + k) - 1, k)"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(0_i64)"}}],"constructors":[{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(value)-instance-method","html_id":"*(value)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value * (value.to_i64 % MOD))"}},{"id":"**(value)-instance-method","html_id":"**(value)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"**","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(AtCoder::Math.pow_mod(@value, value.to_i64, MOD))"}},{"id":"+(value)-instance-method","html_id":"+(value)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value + (value.to_i64 % MOD))"}},{"id":"+-instance-method","html_id":"+-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"-(value)-instance-method","html_id":"-(value)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value - (value.to_i64 % MOD))"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.class.new(0_i64)) - self"}},{"id":"/(value:self)-instance-method","html_id":"/(value:self)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * value.inv\n"}},{"id":"/(value)-instance-method","html_id":"/(value)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * (self.class.new(value.to_i64)).inv\n"}},{"id":"//(value)-instance-method","html_id":"//(value)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / value"}},{"id":"<(value)-instance-method","html_id":"&lt;(value)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<<(value)-instance-method","html_id":"&lt;&lt;(value)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * ((self.class.new(2_i64)) ** value)"}},{"id":"<=(value)-instance-method","html_id":"&lt;=(value)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"<=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":"==(value)-instance-method","html_id":"==(value)-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value"}},{"id":"==(value:self)-instance-method","html_id":"==(value:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value.to_i64"}},{"id":">(value)-instance-method","html_id":"&gt;(value)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":">","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">=(value)-instance-method","html_id":"&gt;=(value)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":">=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":"abs-instance-method","html_id":"abs-instance-method","name":"abs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"inspect(*args,**options)-instance-method","html_id":"inspect(*args,**options)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options)"}},{"id":"inspect(*args,**options,&)-instance-method","html_id":"inspect(*args,**options,&amp;)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"inv-instance-method","html_id":"inv-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"g, x = AtCoder::Math.extended_gcd(@value, MOD)\nself.class.new(x)\n"}},{"id":"pow(value)-instance-method","html_id":"pow(value)-instance-method","name":"pow","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"pow","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self ** value"}},{"id":"sqrt-instance-method","html_id":"sqrt-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"sqrt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"z = self.class.new(1_i64)\nwhile !((z ** ((MOD - 1) // 2)) == (MOD - 1))\n  z = z + 1\nend\nq = MOD - 1\nm = 0\nwhile (q % 2) == 0\n  q = q // 2\n  m = m + 1\nend\nc = z ** q\nt = self ** q\nr = self ** ((q + 1) // 2)\nm.downto(2) do |i|\n  tmp = t ** (2 ** (i - 2))\n  if tmp != 1\n    r = r * c\n    t = t * (c ** 2)\n  end\n  c = c * c\nend\nif (r * r) == self\n  (r.to_i64 * 2) <= MOD ? r : -r\nelse\n  nil\nend\n"}},{"id":"to_i64:Int64-instance-method","html_id":"to_i64:Int64-instance-method","name":"to_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&)-instance-method","html_id":"to_s(*args,**options,&amp;)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"val-instance-method","html_id":"val-instance-method","name":"val","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"val","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.to_i64"}},{"id":"value:Int64-instance-method","html_id":"value:Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/ModInt998244353","path":"AtCoder/ModInt998244353.html","kind":"struct","full_name":"AtCoder::ModInt998244353","name":"ModInt998244353","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/google/ac-library.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mod_int.cr","line_number":226,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MOD","name":"MOD","value":"998244353_i64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements atcoder::modint998244353_i64.\n\n```\nalias Mint = AtCoder::ModInt998244353\nMint.new(30_i64) // Mint.new(7_i64)\n```","summary":"<p>Implements atcoder::modint998244353_i64.</p>","class_methods":[{"id":"combination(n,k)-class-method","html_id":"combination(n,k)-class-method","name":"combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(permutation(n, k)) // @@factorials[k]\n"}},{"id":"factorial(n)-class-method","html_id":"factorial(n)-class-method","name":"factorial","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"factorial","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@factorials.empty?\n  @@factorials << (self.new(1_i64))\nend\n@@factorials.size.upto(n) do |i|\n  @@factorials << (@@factorials.last * i)\nend\n@@factorials[n]\n"}},{"id":"permutation(n,k)-class-method","html_id":"permutation(n,k)-class-method","name":"permutation","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"permutation","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n >= k\nelse\n  raise(ArgumentError.new(\"k cannot be greater than n\"))\nend\n(factorial(n)) // (factorial(n - k))\n"}},{"id":"repeated_combination(n,k)-class-method","html_id":"repeated_combination(n,k)-class-method","name":"repeated_combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"args_string":"(n, k)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"repeated_combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"combination((n + k) - 1, k)"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(0_i64)"}}],"constructors":[{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(value)-instance-method","html_id":"*(value)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value * (value.to_i64 % MOD))"}},{"id":"**(value)-instance-method","html_id":"**(value)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"**","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(AtCoder::Math.pow_mod(@value, value.to_i64, MOD))"}},{"id":"+(value)-instance-method","html_id":"+(value)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value + (value.to_i64 % MOD))"}},{"id":"+-instance-method","html_id":"+-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"-(value)-instance-method","html_id":"-(value)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value - (value.to_i64 % MOD))"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.class.new(0_i64)) - self"}},{"id":"/(value:self)-instance-method","html_id":"/(value:self)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * value.inv\n"}},{"id":"/(value)-instance-method","html_id":"/(value)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nself * (self.class.new(value.to_i64)).inv\n"}},{"id":"//(value)-instance-method","html_id":"//(value)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / value"}},{"id":"<(value)-instance-method","html_id":"&lt;(value)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<<(value)-instance-method","html_id":"&lt;&lt;(value)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * ((self.class.new(2_i64)) ** value)"}},{"id":"<=(value)-instance-method","html_id":"&lt;=(value)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"<=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":"==(value)-instance-method","html_id":"==(value)-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value"}},{"id":"==(value:self)-instance-method","html_id":"==(value:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"args_string":"(value : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value == value.to_i64"}},{"id":">(value)-instance-method","html_id":"&gt;(value)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":">","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">=(value)-instance-method","html_id":"&gt;=(value)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":">=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":"abs-instance-method","html_id":"abs-instance-method","name":"abs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"inspect(*args,**options)-instance-method","html_id":"inspect(*args,**options)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options)"}},{"id":"inspect(*args,**options,&)-instance-method","html_id":"inspect(*args,**options,&amp;)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"inv-instance-method","html_id":"inv-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"g, x = AtCoder::Math.extended_gcd(@value, MOD)\nself.class.new(x)\n"}},{"id":"pow(value)-instance-method","html_id":"pow(value)-instance-method","name":"pow","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"pow","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self ** value"}},{"id":"sqrt-instance-method","html_id":"sqrt-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"sqrt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"z = self.class.new(1_i64)\nwhile !((z ** ((MOD - 1) // 2)) == (MOD - 1))\n  z = z + 1\nend\nq = MOD - 1\nm = 0\nwhile (q % 2) == 0\n  q = q // 2\n  m = m + 1\nend\nc = z ** q\nt = self ** q\nr = self ** ((q + 1) // 2)\nm.downto(2) do |i|\n  tmp = t ** (2 ** (i - 2))\n  if tmp != 1\n    r = r * c\n    t = t * (c ** 2)\n  end\n  c = c * c\nend\nif (r * r) == self\n  (r.to_i64 * 2) <= MOD ? r : -r\nelse\n  nil\nend\n"}},{"id":"to_i64:Int64-instance-method","html_id":"to_i64:Int64-instance-method","name":"to_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&)-instance-method","html_id":"to_s(*args,**options,&amp;)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"val-instance-method","html_id":"val-instance-method","name":"val","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"val","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.to_i64"}},{"id":"value:Int64-instance-method","html_id":"value:Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/Prime","path":"AtCoder/Prime.html","kind":"module","full_name":"AtCoder::Prime","name":"Prime","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/google/ac-library.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"prime.cr","line_number":25,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/google/ac-library.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[{"html_id":"github.com/google/ac-library.cr/AtCoder/Prime","kind":"module","full_name":"AtCoder::Prime","name":"Prime"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [Ruby's Prime library](https://ruby-doc.com/stdlib/libdoc/prime/rdoc/Prime.html).\n\n```\nAtCoder::Prime.first(7) # => [2, 3, 5, 7, 11, 13, 17]\n```","summary":"<p>Implements <a href=\"https://ruby-doc.com/stdlib/libdoc/prime/rdoc/Prime.html\" target=\"_blank\">Ruby's Prime library</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"each(&)-instance-method","html_id":"each(&amp;)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr#L36","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"index = 0\nloop do\n  yield get_nth_prime(index)\n  index = index + 1\nend\n"}},{"id":"each_divisor(value:Int)-instance-method","html_id":"each_divisor(value:Int)-instance-method","name":"each_divisor","doc":"Returns an enumerator that iterates through the all positive divisors of\nthe given number. **The order is not guaranteed.**\nNot in the original Ruby's Prime library.\n\n```\nAtCoder::Prime.each_divisor(20) do |n|\n  puts n\nend # => Puts 1, 2, 4, 5, 10, and 20\n\nAtCoder::Prime.each_divisor(10).map { |n| 1.0 / n }.to_a # => [1.0, 0.5, 0.2, 0.1]\n```","summary":"<p>Returns an enumerator that iterates through the all positive divisors of the given number.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"args_string":"(value : Int)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr#L258","def":{"name":"each_divisor","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value > 0\nelse\n  raise(ArgumentError.new)\nend\nfactors = prime_division(value)\nif value == 1\n  exponential_factors = [[value]]\nelse\n  exponential_factors = factors.map do |__arg2|\n    factor = __arg2[0]\n    count = __arg2[1]\n    cnt = (typeof(value)).zero + 1\n    Array(typeof(value)).new(count + 1) do |i|\n      cnt_copy = cnt\n      if i < count\n        cnt = cnt * factor\n      end\n      cnt_copy\n    end\n  end\nend\nEachDivisor(typeof(value)).new(exponential_factors)\n"}},{"id":"each_divisor(value:T,&block:T->)-instance-method","html_id":"each_divisor(value:T,&amp;block:T-&gt;)-instance-method","name":"each_divisor","doc":"Returns an enumerator that iterates through the all positive divisors of\nthe given number. **The order is not guaranteed.**\nNot in the original Ruby's Prime library.\n\n```\nAtCoder::Prime.each_divisor(20) do |n|\n  puts n\nend # => Puts 1, 2, 4, 5, 10, and 20\n\nAtCoder::Prime.each_divisor(10).map { |n| 1.0 / n }.to_a # => [1.0, 0.5, 0.2, 0.1]\n```","summary":"<p>Returns an enumerator that iterates through the all positive divisors of the given number.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T, &block : T -> )","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr#L282","def":{"name":"each_divisor","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> )"},"return_type":"","visibility":"Public","body":"(each_divisor(value)).each(&block)"}},{"id":"int_from_prime_division(prime_divisions:Array(::Tuple(Int,Int)))-instance-method","html_id":"int_from_prime_division(prime_divisions:Array(::Tuple(Int,Int)))-instance-method","name":"int_from_prime_division","doc":null,"summary":null,"abstract":false,"args":[{"name":"prime_divisions","doc":null,"default_value":"","external_name":"prime_divisions","restriction":"Array(::Tuple(Int, Int))"}],"args_string":"(prime_divisions : Array(::Tuple(Int, Int)))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr#L115","def":{"name":"int_from_prime_division","args":[{"name":"prime_divisions","doc":null,"default_value":"","external_name":"prime_divisions","restriction":"Array(::Tuple(Int, Int))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"int_class = extract_prime_division_base(prime_divisions.class)\nprime_divisions.reduce(int_class.new(1)) do |i, __arg1|\n  factor = __arg1[0]\n  exponent = __arg1[1]\n  i * (factor ** exponent)\nend\n"}},{"id":"prime?(value:Int)-instance-method","html_id":"prime?(value:Int)-instance-method","name":"prime?","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"args_string":"(value : Int)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr#L120","def":{"name":"prime?","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value < 2\n  return false\nend\nif value <= 3\n  return true\nend\nif value.even?\n  return false\nend\nif value < 9\n  return true\nend\nif value < 65535\n  if (((typeof(value)).new(30)).gcd(value % 30)) == 1\n  else\n    return false\n  end\n  7.step(by: 30, to: value) do |base|\n    if (base * base) > value\n      break\n    end\n    if {0, 4, 6, 10, 12, 16, 22, 24}.any? do |i|\n      (value % (base + i)) == 0\n    end\n      return false\n    end\n  end\n  return true\nend\nmiller_rabin(value.to_i64)\n"}},{"id":"prime_division(value:Int)-instance-method","html_id":"prime_division(value:Int)-instance-method","name":"prime_division","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"args_string":"(value : Int)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr#L44","def":{"name":"prime_division","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == 0\n  raise(DivisionByZeroError.new)\nend\nint = typeof(value)\nfactors = [] of Tuple(typeof(value), typeof(value))\nif value < 0\n  value = value.abs\n  factors << {int.new(-1), int.new(1)}\nend\nwhile !((prime?(value)) || (value == 1))\n  factor = value\n  while !(prime?(factor))\n    factor = find_factor(factor)\n  end\n  count = 0\n  while (value % factor) == 0\n    value = value // factor\n    count = count + 1\n  end\n  factors << {int.new(factor), int.new(count)}\nend\nif value > 1\n  factors << {value, int.new(1)}\nend\nfactors.sort_by! do |__arg0|\n  factor = __arg0[0]\n  factor\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/PriorityQueue","path":"AtCoder/PriorityQueue.html","kind":"class","full_name":"AtCoder::PriorityQueue(T)","name":"PriorityQueue","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"priority_queue.cr","line_number":29,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/google/ac-library.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements standard priority queue like [std::priority_queue](https://en.cppreference.com/w/cpp/container/priority_queue).\n\n```\nq = AtCoder::PriorityQueue(Int64).new\nq << 1_i64\nq << 3_i64\nq << 2_i64\nq.pop # => 3\nq.pop # => 2\nq.pop # => 1\n```","summary":"<p>Implements standard priority queue like <a href=\"https://en.cppreference.com/w/cpp/container/priority_queue\" target=\"_blank\">std::priority_queue</a>.</p>","class_methods":[{"id":"max(enumerable:Enumerable(T))-class-method","html_id":"max(enumerable:Enumerable(T))-class-method","name":"max","doc":"Create a new queue in ascending order of priority with the elements in *enumerable*.","summary":"<p>Create a new queue in ascending order of priority with the elements in <em>enumerable</em>.</p>","abstract":false,"args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"args_string":"(enumerable : Enumerable(T))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L40","def":{"name":"max","args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(enumerable) do |a, b|\n  a <= b\nend"}},{"id":"max-class-method","html_id":"max-class-method","name":"max","doc":"Create a new queue in ascending order of priority.","summary":"<p>Create a new queue in ascending order of priority.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L35","def":{"name":"max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new do |a, b|\n  a <= b\nend"}},{"id":"min(enumerable:Enumerable(T))-class-method","html_id":"min(enumerable:Enumerable(T))-class-method","name":"min","doc":"Create a new queue in descending order of priority with the elements in *enumerable*.","summary":"<p>Create a new queue in descending order of priority with the elements in <em>enumerable</em>.</p>","abstract":false,"args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"args_string":"(enumerable : Enumerable(T))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L50","def":{"name":"min","args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(enumerable) do |a, b|\n  a >= b\nend"}},{"id":"min-class-method","html_id":"min-class-method","name":"min","doc":"Create a new queue in descending order of priority.","summary":"<p>Create a new queue in descending order of priority.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L45","def":{"name":"min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new do |a, b|\n  a >= b\nend"}}],"constructors":[{"id":"new(enumerable:Enumerable(T))-class-method","html_id":"new(enumerable:Enumerable(T))-class-method","name":"new","doc":"Initializes queue with the elements in *enumerable*.","summary":"<p>Initializes queue with the elements in <em>enumerable</em>.</p>","abstract":false,"args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"args_string":"(enumerable : Enumerable(T))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L59","def":{"name":"new","args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(enumerable) do |a, b|\n  a <= b\nend"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L54","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PriorityQueue(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(enumerable:Enumerable(T),&block:T,T->Bool)-class-method","html_id":"new(enumerable:Enumerable(T),&amp;block:T,T-&gt;Bool)-class-method","name":"new","doc":"Initializes queue with the elements in *enumerable* and the custom comperator.\n\nIf the second argument `b` should be popped earlier than\nthe first argument `a`, return `true`. Else, return `false`.\n\n```\nq = AtCoder::PriorityQueue.new([1, 3, 2]) { |a, b| a >= b }\nq.pop # => 1\nq.pop # => 2\nq.pop # => 3\n```","summary":"<p>Initializes queue with the elements in <em>enumerable</em> and the custom comperator.</p>","abstract":false,"args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"args_string":"(enumerable : Enumerable(T), &block : T, T -> Bool)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L93","def":{"name":"new","args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, T -> Bool)"},"return_type":"","visibility":"Public","body":"_ = PriorityQueue(T).allocate\n_.initialize(enumerable, &block) do |_arg0, _arg1|\n  yield _arg0, _arg1\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(&block:T,T->Bool)-class-method","html_id":"new(&amp;block:T,T-&gt;Bool)-class-method","name":"new","doc":"Initializes queue with the custom comperator.\n\nIf the second argument `b` should be popped earlier than\nthe first argument `a`, return `true`. Else, return `false`.\n\n```\nq = AtCoder::PriorityQueue(Int64).new { |a, b| a >= b }\nq << 1_i64\nq << 3_i64\nq << 2_i64\nq.pop # => 1\nq.pop # => 2\nq.pop # => 3\n```","summary":"<p>Initializes queue with the custom comperator.</p>","abstract":false,"args":[],"args_string":"(&block : T, T -> Bool)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L77","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, T -> Bool)"},"return_type":"","visibility":"Public","body":"_ = PriorityQueue(T).allocate\n_.initialize(&block) do |_arg0, _arg1|\n  yield _arg0, _arg1\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(v:T)-instance-method","html_id":"&lt;&lt;(v:T)-instance-method","name":"<<","doc":"Alias of `push`","summary":"<p>Alias of <code><a href=\"../AtCoder/PriorityQueue.html#push(v:T)-instance-method\">#push</a></code></p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"T"}],"args_string":"(v : T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L131","def":{"name":"<<","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"push(v)"}},{"id":"each(&)-instance-method","html_id":"each(&amp;)-instance-method","name":"each","doc":"Yields each item in the queue in comparator's order.","summary":"<p>Yields each item in the queue in comparator's order.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L162","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@heap.sort do |a, b|\n  @compare_proc.call(a, b) ? 1 : -1\nend.each do |e|\n  yield e\nend"}},{"id":"empty?(*args,**options)-instance-method","html_id":"empty?(*args,**options)-instance-method","name":"empty?","doc":"Returns `true` if the queue is empty.","summary":"<p>Returns <code>true</code> if the queue is empty.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L174","def":{"name":"empty?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@heap.empty?(*args, **options)"}},{"id":"empty?(*args,**options,&)-instance-method","html_id":"empty?(*args,**options,&amp;)-instance-method","name":"empty?","doc":"Returns `true` if the queue is empty.","summary":"<p>Returns <code>true</code> if the queue is empty.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L174","def":{"name":"empty?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@heap.empty?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"first(&)-instance-method","html_id":"first(&amp;)-instance-method","name":"first","doc":"Returns, but does not remove, the head of the queue.","summary":"<p>Returns, but does not remove, the head of the queue.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L169","def":{"name":"first","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"@heap.first do\n  yield\nend"}},{"id":"heap:Array(T)-instance-method","html_id":"heap:Array(T)-instance-method","name":"heap","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L32","def":{"name":"heap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"@heap"}},{"id":"pop-instance-method","html_id":"pop-instance-method","name":"pop","doc":"Pops value from the queue.","summary":"<p>Pops value from the queue.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L136","def":{"name":"pop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @heap.size == 0\n  return nil\nend\nif @heap.size == 1\n  return @heap.pop\nend\nret = @heap.first\n@heap[0] = @heap.pop\nindex = 0\nwhile ((index * 2) + 1) < @heap.size\n  child = if ((index * 2) + 2) < @heap.size && (!(@compare_proc.call(@heap[(index * 2) + 2], @heap[(index * 2) + 1])))\n    (index * 2) + 2\n  else\n    (index * 2) + 1\n  end\n  if @compare_proc.call(@heap[child], @heap[index])\n    break\n  end\n  @heap[child], @heap[index] = @heap[index], @heap[child]\n  index = child\nend\nret\n"}},{"id":"push(v:T)-instance-method","html_id":"push(v:T)-instance-method","name":"push","doc":"Pushes value into the queue.","summary":"<p>Pushes value into the queue.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"T"}],"args_string":"(v : T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L117","def":{"name":"push","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@heap << v\nindex = @heap.size - 1\nwhile index != 0\n  parent = (index - 1) // 2\n  if @compare_proc.call(@heap[index], @heap[parent])\n    break\n  end\n  @heap[parent], @heap[index] = @heap[index], @heap[parent]\n  index = parent\nend\n"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":"Returns size of the queue.","summary":"<p>Returns size of the queue.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L177","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@heap.size(*args, **options)"}},{"id":"size(*args,**options,&)-instance-method","html_id":"size(*args,**options,&amp;)-instance-method","name":"size","doc":"Returns size of the queue.","summary":"<p>Returns size of the queue.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/priority_queue.cr#L177","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@heap.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/RedBlackTree","path":"AtCoder/RedBlackTree.html","kind":"class","full_name":"AtCoder::RedBlackTree","name":"RedBlackTree","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"red_black_tree.cr","line_number":26,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/google/ac-library.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L75","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(x)-instance-method","html_id":"&lt;&lt;(x)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L376","def":{"name":"<<","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"insert(x)"}},{"id":"black_height(x=root)-instance-method","html_id":"black_height(x=root)-instance-method","name":"black_height","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"args_string":"(x = root)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L237","def":{"name":"black_height","args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"height = 0\nwhile !x.nil_node?\n  x = x.left\n  if x.nil_node? || x.black?\n    height = height + 1\n  end\nend\nheight\n"}},{"id":"delete(key)-instance-method","html_id":"delete(key)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L364","def":{"name":"delete","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = search(key)\nif node.nil_node?\nelse\n  delete_node(node)\nend\n"}},{"id":"delete_node(z)-instance-method","html_id":"delete_node(z)-instance-method","name":"delete_node","doc":null,"summary":null,"abstract":false,"args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":""}],"args_string":"(z)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L126","def":{"name":"delete_node","args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"y = (z.left.nil_node? || z.right.nil_node?) ? z : successor(z)\nx = y.left.nil_node? ? y.right : y.left\nx.parent = y.parent\nif y.parent.nil_node?\n  self.root = x\nelse\n  if y == y.parent.left\n    y.parent.left = x\n  else\n    y.parent.right = x\n  end\nend\nif y != z\n  z.key = y.key\nend\nif y.color == Node::BLACK\n  delete_fixup(x)\nend\nself.size = self.size - 1\ny\n"}},{"id":"each(x=root,&)-instance-method","html_id":"each(x=root,&amp;)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"args_string":"(x = root, &)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L198","def":{"name":"each","args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"inorder_walk(x) do |k|\n  yield k\nend"}},{"id":"empty?-instance-method","html_id":"empty?-instance-method","name":"empty?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L233","def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.root.nil_node?"}},{"id":"has_key?(key)-instance-method","html_id":"has_key?(key)-instance-method","name":"has_key?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L371","def":{"name":"has_key?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = search(key)\n!node.nil_node?\n"}},{"id":"inorder_walk(x=root,&)-instance-method","html_id":"inorder_walk(x=root,&amp;)-instance-method","name":"inorder_walk","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"args_string":"(x = root, &)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L189","def":{"name":"inorder_walk","args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"x = self.minimum_node\nwhile !x.nil_node?\n  yield x.key\n  x = successor(x)\nend\n"}},{"id":"insert(key)-instance-method","html_id":"insert(key)-instance-method","name":"insert","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L80","def":{"name":"insert","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"insert_node(Node.new(key))"}},{"id":"insert_node(x)-instance-method","html_id":"insert_node(x)-instance-method","name":"insert_node","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L84","def":{"name":"insert_node","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"insert_helper(x)\nx.color = Node::RED\nwhile (x != root) && (x.parent.color == Node::RED)\n  if x.parent == x.parent.parent.left\n    y = x.parent.parent.right\n    if (!y.nil_node?) && (y.color == Node::RED)\n      x.parent.color = Node::BLACK\n      y.color = Node::BLACK\n      x.parent.parent.color = Node::RED\n      x = x.parent.parent\n    else\n      if x == x.parent.right\n        x = x.parent\n        left_rotate(x)\n      end\n      x.parent.color = Node::BLACK\n      x.parent.parent.color = Node::RED\n      right_rotate(x.parent.parent)\n    end\n  else\n    y = x.parent.parent.left\n    if (!y.nil_node?) && (y.color == Node::RED)\n      x.parent.color = Node::BLACK\n      y.color = Node::BLACK\n      x.parent.parent.color = Node::RED\n      x = x.parent.parent\n    else\n      if x == x.parent.left\n        x = x.parent\n        right_rotate(x)\n      end\n      x.parent.color = Node::BLACK\n      x.parent.parent.color = Node::RED\n      left_rotate(x.parent.parent)\n    end\n  end\nend\nroot.color = Node::BLACK\n"}},{"id":"lower_than(key,x=root)-instance-method","html_id":"lower_than(key,x=root)-instance-method","name":"lower_than","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"args_string":"(key, x = root)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L222","def":{"name":"lower_than","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"while (!x.nil_node?) && (x.key != key)\n  tmp = (  key < x.key) ? x.left : x.right\n  if tmp.nil_node?\n    return x\n  end\n  x = tmp\nend\nx\n"}},{"id":"max-instance-method","html_id":"max-instance-method","name":"max","doc":"Returns the element with the maximum value in the collection.\n\nIt compares using `>` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].max        # => 3\n[\"Alice\", \"Bob\"].max # => \"Bob\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the maximum value in the collection.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L360","def":{"name":"max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"maximum_node.key"}},{"id":"maximum_node(x=root)-instance-method","html_id":"maximum_node(x=root)-instance-method","name":"maximum_node","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"args_string":"(x = root)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L158","def":{"name":"maximum_node","args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"while !x.right.nil_node?\n  x = x.right\nend\nx\n"}},{"id":"min-instance-method","html_id":"min-instance-method","name":"min","doc":"Returns the element with the minimum value in the collection.\n\nIt compares using `<` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].min        # => 1\n[\"Alice\", \"Bob\"].min # => \"Alice\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the minimum value in the collection.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L356","def":{"name":"min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"minimum_node.key"}},{"id":"minimum_node(x=root)-instance-method","html_id":"minimum_node(x=root)-instance-method","name":"minimum_node","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"args_string":"(x = root)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L151","def":{"name":"minimum_node","args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"while !x.left.nil_node?\n  x = x.left\nend\nx\n"}},{"id":"predecessor(x)-instance-method","html_id":"predecessor(x)-instance-method","name":"predecessor","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L177","def":{"name":"predecessor","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !x.left.nil_node?\n  return maximum_node(x.left)\nend\ny = x.parent\nwhile (!y.nil_node?) && (x == y.left)\n  x = y\n  y = y.parent\nend\ny\n"}},{"id":"reverse_each(x=root,&)-instance-method","html_id":"reverse_each(x=root,&amp;)-instance-method","name":"reverse_each","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"args_string":"(x = root, &)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L211","def":{"name":"reverse_each","args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"reverse_inorder_walk(x) do |k|\n  yield k\nend"}},{"id":"reverse_inorder_walk(x=root,&)-instance-method","html_id":"reverse_inorder_walk(x=root,&amp;)-instance-method","name":"reverse_inorder_walk","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"args_string":"(x = root, &)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L202","def":{"name":"reverse_inorder_walk","args":[{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"x = self.maximum_node\nwhile !x.nil_node?\n  yield x.key\n  x = predecessor(x)\nend\n"}},{"id":"root:Node-instance-method","html_id":"root:Node-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Node","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L72","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"@root"}},{"id":"root=(root:Node)-instance-method","html_id":"root=(root:Node)-instance-method","name":"root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Node"}],"args_string":"(root : Node)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L72","def":{"name":"root=","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = root"}},{"id":"search(key,x=root)-instance-method","html_id":"search(key,x=root)-instance-method","name":"search","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"args_string":"(key, x = root)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L215","def":{"name":"search","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"x","doc":null,"default_value":"root","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"while (!x.nil_node?) && (x.key != key)\n  x = (  key < x.key) ? x.left : x.right\nend\nx\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of elements in the collection.\n\n```\n[1, 2, 3, 4].size # => 4\n```","summary":"<p>Returns the number of elements in the collection.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L73","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size"}},{"id":"size=(size)-instance-method","html_id":"size=(size)-instance-method","name":"size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L73","def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = size"}},{"id":"successor(x)-instance-method","html_id":"successor(x)-instance-method","name":"successor","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L165","def":{"name":"successor","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !x.right.nil_node?\n  return minimum_node(x.right)\nend\ny = x.parent\nwhile (!y.nil_node?) && (x == y.right)\n  x = y\n  y = y.parent\nend\ny\n"}}],"macros":[],"types":[{"html_id":"github.com/google/ac-library.cr/AtCoder/RedBlackTree/NilNode","path":"AtCoder/RedBlackTree/NilNode.html","kind":"class","full_name":"AtCoder::RedBlackTree::NilNode","name":"NilNode","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/AtCoder/RedBlackTree/Node","kind":"class","full_name":"AtCoder::RedBlackTree::Node","name":"Node"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/AtCoder/RedBlackTree/Node","kind":"class","full_name":"AtCoder::RedBlackTree::Node","name":"Node"},{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"red_black_tree.cr","line_number":54,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder/RedBlackTree","kind":"class","full_name":"AtCoder::RedBlackTree","name":"RedBlackTree"},"doc":null,"summary":null,"class_methods":[{"id":"instance-class-method","html_id":"instance-class-method","name":"instance","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L55","def":{"name":"instance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@instance || (@@instance = RedBlackTree::NilNode.new)"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L59","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"nil_node?-instance-method","html_id":"nil_node?-instance-method","name":"nil_node?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L65","def":{"name":"nil_node?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"true"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/RedBlackTree/Node","path":"AtCoder/RedBlackTree/Node.html","kind":"class","full_name":"AtCoder::RedBlackTree::Node","name":"Node","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"red_black_tree.cr","line_number":27,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"BLACK","name":"BLACK","value":":black","doc":null,"summary":null},{"id":"RED","name":"RED","value":":red","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/google/ac-library.cr/AtCoder/RedBlackTree/NilNode","kind":"class","full_name":"AtCoder::RedBlackTree::NilNode","name":"NilNode"}],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder/RedBlackTree","kind":"class","full_name":"AtCoder::RedBlackTree","name":"RedBlackTree"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(key:Int32,color=RED)-class-method","html_id":"new(key:Int32,color=RED)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int32"},{"name":"color","doc":null,"default_value":"RED","external_name":"color","restriction":""}],"args_string":"(key : Int32, color = <span class=\"t\">RED</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L37","def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int32"},{"name":"color","doc":null,"default_value":"RED","external_name":"color","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key, color)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"black?-instance-method","html_id":"black?-instance-method","name":"black?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L41","def":{"name":"black?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"color == BLACK"}},{"id":"color:Symbol-instance-method","html_id":"color:Symbol-instance-method","name":"color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L28","def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@color"}},{"id":"color=(color)-instance-method","html_id":"color=(color)-instance-method","name":"color=","doc":null,"summary":null,"abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":""}],"args_string":"(color)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L28","def":{"name":"color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@color = color"}},{"id":"key:Int32-instance-method","html_id":"key:Int32-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L29","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key"}},{"id":"key=(key)-instance-method","html_id":"key=(key)-instance-method","name":"key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L29","def":{"name":"key=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key = key"}},{"id":"left-instance-method","html_id":"left-instance-method","name":"left","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"left","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @left).nil?\n  ::raise(NilAssertionError.new(\"AtCoder::RedBlackTree::Node#left cannot be nil\"))\nelse\n  value\nend"}},{"id":"left=(left)-instance-method","html_id":"left=(left)-instance-method","name":"left=","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""}],"args_string":"(left)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L30","def":{"name":"left=","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@left = left"}},{"id":"left?:AtCoder::RedBlackTree::Node?-instance-method","html_id":"left?:AtCoder::RedBlackTree::Node?-instance-method","name":"left?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AtCoder::RedBlackTree::Node?","source_link":null,"def":{"name":"left?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@left"}},{"id":"nil_node?-instance-method","html_id":"nil_node?-instance-method","name":"nil_node?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L49","def":{"name":"nil_node?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}},{"id":"parent:self-instance-method","html_id":"parent:self-instance-method","name":"parent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":null,"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if (value = @parent).nil?\n  ::raise(NilAssertionError.new(\"AtCoder::RedBlackTree::Node#parent cannot be nil\"))\nelse\n  value\nend"}},{"id":"parent=(parent:self)-instance-method","html_id":"parent=(parent:self)-instance-method","name":"parent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"self"}],"args_string":"(parent : <span class=\"k\">self</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L32","def":{"name":"parent=","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parent = parent"}},{"id":"parent?:self?-instance-method","html_id":"parent?:self?-instance-method","name":"parent?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>?","source_link":null,"def":{"name":"parent?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"@parent"}},{"id":"red?-instance-method","html_id":"red?-instance-method","name":"red?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L45","def":{"name":"red?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"color == RED"}},{"id":"right-instance-method","html_id":"right-instance-method","name":"right","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"right","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @right).nil?\n  ::raise(NilAssertionError.new(\"AtCoder::RedBlackTree::Node#right cannot be nil\"))\nelse\n  value\nend"}},{"id":"right=(right)-instance-method","html_id":"right=(right)-instance-method","name":"right=","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"args_string":"(right)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/red_black_tree.cr#L31","def":{"name":"right=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@right = right"}},{"id":"right?:AtCoder::RedBlackTree::Node?-instance-method","html_id":"right?:AtCoder::RedBlackTree::Node?-instance-method","name":"right?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AtCoder::RedBlackTree::Node?","source_link":null,"def":{"name":"right?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@right"}}],"macros":[],"types":[]}]},{"html_id":"github.com/google/ac-library.cr/AtCoder/SCC","path":"AtCoder/SCC.html","kind":"class","full_name":"AtCoder::SCC","name":"SCC","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"scc.cr","line_number":27,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/scc.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [atcoder::scc_graph](https://atcoder.github.io/ac-library/master/document_en/scc.html).\n\n```\nscc = AtCoder::SCC.new(3_i64)\nscc.add_edge(0, 1)\nscc.add_edge(1, 0)\nscc.add_edge(2, 0)\nscc.scc # => [Set{2}, Set{0, 1}]\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/scc.html\" target=\"_blank\">atcoder::scc_graph</a>.</p>","class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/scc.cr#L33","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(from,to)-instance-method","html_id":"add_edge(from,to)-instance-method","name":"add_edge","doc":"Implements atcoder::scc_graph.add_edge(from, to).","summary":"<p>Implements atcoder::scc_graph.add_edge(from, to).</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(from, to)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/scc.cr#L44","def":{"name":"add_edge","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@adjacencies[from][:out] << to.to_i64\n@adjacencies[to][:in] << from.to_i64\n"}},{"id":"adjacencies:Array(Adjacency)-instance-method","html_id":"adjacencies:Array(Adjacency)-instance-method","name":"adjacencies","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Adjacency)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/scc.cr#L31","def":{"name":"adjacencies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Adjacency)","visibility":"Public","body":"@adjacencies"}},{"id":"scc-instance-method","html_id":"scc-instance-method","name":"scc","doc":"Implements atcoder::scc_graph.scc().","summary":"<p>Implements atcoder::scc_graph.scc().</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/scc.cr#L94","def":{"name":"scc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@visited = Set(Int64).new\n@stack = Deque(Int64).new\n@visit_counts = Array(Int64).new(@size, 0_i64)\n@topological_order = Array(Int64).new(@size)\n@groups = Array(Set(Int64)).new\n@size.times do |node|\n  if @visited.includes?(node)\n  else\n    dfs(node)\n  end\nend\n@visited = Set(Int64).new\n@topological_order.reverse_each do |node|\n  if @visited.includes?(node)\n  else\n    reverse_dfs(node)\n  end\nend\n@groups\n"}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/scc.cr#L30","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@size"}}],"macros":[],"types":[{"html_id":"github.com/google/ac-library.cr/AtCoder/SCC/Adjacency","path":"AtCoder/SCC/Adjacency.html","kind":"alias","full_name":"AtCoder::SCC::Adjacency","name":"Adjacency","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"scc.cr","line_number":28,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/scc.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(in: Array(Int64), out: Array(Int64))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder/SCC","kind":"class","full_name":"AtCoder::SCC","name":"SCC"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/google/ac-library.cr/AtCoder/SegTree","path":"AtCoder/SegTree.html","kind":"class","full_name":"AtCoder::SegTree(T)","name":"SegTree","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"seg_tree.cr","line_number":28,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [atcoder::segtree](https://atcoder.github.io/ac-library/master/document_en/segtree.html).\n\nThe identity element will be implicitly defined as nil, so you don't\nhave to manually define it. In the other words, you cannot include\nnil into an element of the monoid.\n\n```\ntree = AtCoder::SegTree.new((0...100).to_a) { |a, b| [a, b].min }\ntree[10...50] # => 10\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/segtree.html\" target=\"_blank\">atcoder::segtree</a>.</p>","class_methods":[],"constructors":[{"id":"new(values:Array(T))-class-method","html_id":"new(values:Array(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(T)"}],"args_string":"(values : Array(T))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L31","def":{"name":"new","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SegTree(T).allocate\n_.initialize(values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(values:Array(T),&operator:T,T->T)-class-method","html_id":"new(values:Array(T),&amp;operator:T,T-&gt;T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(T)"}],"args_string":"(values : Array(T), &operator : T, T -> T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L35","def":{"name":"new","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":"(T, T -> T)"},"return_type":"","visibility":"Public","body":"_ = SegTree(T).allocate\n_.initialize(values, &operator) do |_arg0, _arg1|\n  yield _arg0, _arg1\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](index:Int)-instance-method","html_id":"[](index:Int)-instance-method","name":"[]","doc":"Implements atcoder::segtree.get(index)","summary":"<p>Implements atcoder::segtree.get(index)</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L95","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values[index]"}},{"id":"[](range:Range(Int,Int))-instance-method","html_id":"[](range:Range(Int,Int))-instance-method","name":"[]","doc":"Implements atcoder::segtree.prod(l, r)","summary":"<p>Implements atcoder::segtree.prod(l, r)</p>","abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"args_string":"(range : Range(Int, Int))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L100","def":{"name":"[]","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a = range.begin\nb = range.exclusive? ? range.end : range.end + 1\n(get_value(a, b, 0, 0...(@segments.size + 1))).not_nil!\n"}},{"id":"[]=(index:Int,value:T)-instance-method","html_id":"[]=(index:Int,value:T)-instance-method","name":"[]=","doc":"Implements atcoder::segtree.set(index, value)","summary":"<p>Implements atcoder::segtree.set(index, value)</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(index : Int, value : T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L70","def":{"name":"[]=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values[index] = value\nparent_index = ((index + @segments.size) - 1) // 2\nwhile parent_index >= 0\n  i = parent_index\n  child1 = nil.as(T | Nil)\n  child2 = nil.as(T | Nil)\n  if ((i * 2) + 1) < @segments.size\n    child1 = @segments[(i * 2) + 1]\n    child2 = @segments[(i * 2) + 2]\n  else\n    if (((i * 2) + 1) - @segments.size) < @values.size\n      child1 = @values[((i * 2) + 1) - @segments.size]\n    end\n    if (((i * 2) + 2) - @segments.size) < @values.size\n      child2 = @values[((i * 2) + 2) - @segments.size]\n    end\n  end\n  @segments[i] = operate(child1, child2)\n  parent_index = (parent_index - 1) // 2\nend\n"}},{"id":"all_prod-instance-method","html_id":"all_prod-instance-method","name":"all_prod","doc":"Implements atcoder::segtree.all_prod(l, r)","summary":"<p>Implements atcoder::segtree.all_prod(l, r)</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L146","def":{"name":"all_prod","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[0...@values.size]"}},{"id":"get(index:Int)-instance-method","html_id":"get(index:Int)-instance-method","name":"get","doc":"Implements atcoder::segtree.get(index)\nalias of `.[]`","summary":"<p>Implements atcoder::segtree.get(index) alias of <code><a href=\"../AtCoder/SegTree.html#[](index:Int)-instance-method\">.[]</a></code></p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L136","def":{"name":"get","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[index]"}},{"id":"get_value(a:Int,b:Int,segment_index:Int,range:Range(Int,Int))-instance-method","html_id":"get_value(a:Int,b:Int,segment_index:Int,range:Range(Int,Int))-instance-method","name":"get_value","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"},{"name":"segment_index","doc":null,"default_value":"","external_name":"segment_index","restriction":"Int"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"args_string":"(a : Int, b : Int, segment_index : Int, range : Range(Int, Int))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L106","def":{"name":"get_value","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"},{"name":"segment_index","doc":null,"default_value":"","external_name":"segment_index","restriction":"Int"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if range.end <= a || b <= range.begin\n  return nil\nend\nif a <= range.begin && range.end <= b\n  if segment_index < @segments.size\n    return @segments[segment_index]\n  else\n    return @values[segment_index - @segments.size]\n  end\nend\nrange_median = (range.begin + range.end) // 2\nchild1 = get_value(a, b, (2 * segment_index) + 1, range.begin...range_median)\nchild2 = get_value(a, b, (2 * segment_index) + 2, range_median...range.end)\noperate(child1, child2)\n"}},{"id":"max_left-instance-method","html_id":"max_left-instance-method","name":"max_left","doc":"FIXME: Unimplemented","summary":"<p><span class=\"flag yellow\">FIXME</span>  Unimplemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L156","def":{"name":"max_left","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new)"}},{"id":"max_right-instance-method","html_id":"max_right-instance-method","name":"max_right","doc":"FIXME: Unimplemented","summary":"<p><span class=\"flag yellow\">FIXME</span>  Unimplemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L151","def":{"name":"max_right","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new)"}},{"id":"prod(left:Int,right:Int)-instance-method","html_id":"prod(left:Int,right:Int)-instance-method","name":"prod","doc":"Implements atcoder::segtree.prod(left, right)","summary":"<p>Implements atcoder::segtree.prod(left, right)</p>","abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int"}],"args_string":"(left : Int, right : Int)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L141","def":{"name":"prod","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[left...right]"}},{"id":"set(index:Int,value:T)-instance-method","html_id":"set(index:Int,value:T)-instance-method","name":"set","doc":"Implements atcoder::segtree.set(index, value)\nalias of `.[]=`","summary":"<p>Implements atcoder::segtree.set(index, value) alias of <code><a href=\"../AtCoder/SegTree.html#[]=(index:Int,value:T)-instance-method\">.[]=</a></code></p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(index : Int, value : T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L130","def":{"name":"set","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[index] = value"}},{"id":"values:Array(T)-instance-method","html_id":"values:Array(T)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L29","def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"@values"}},{"id":"values=(values:Array(T))-instance-method","html_id":"values=(values:Array(T))-instance-method","name":"values=","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(T)"}],"args_string":"(values : Array(T))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/seg_tree.cr#L29","def":{"name":"values=","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values = values"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/SkewHeap","path":"AtCoder/SkewHeap.html","kind":"class","full_name":"AtCoder::SkewHeap(T)","name":"SkewHeap","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"skew_heap.cr","line_number":18,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr#L35","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SkewHeap(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(&block:T,T->Bool)-class-method","html_id":"new(&amp;block:T,T-&gt;Bool)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : T, T -> Bool)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr#L39","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, T -> Bool)"},"return_type":"","visibility":"Public","body":"_ = SkewHeap(T).allocate\n_.initialize(&block) do |_arg0, _arg1|\n  yield _arg0, _arg1\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(v:T)-instance-method","html_id":"&lt;&lt;(v:T)-instance-method","name":"<<","doc":"Alias of `push`","summary":"<p>Alias of <code><a href=\"../AtCoder/SkewHeap.html#push(value:T)-instance-method\">#push</a></code></p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"T"}],"args_string":"(v : T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr#L71","def":{"name":"<<","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"push(v)"}},{"id":"empty?-instance-method","html_id":"empty?-instance-method","name":"empty?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr#L75","def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size == 0"}},{"id":"meld(a:Node(T)?,b:Node(T)?)-instance-method","html_id":"meld(a:Node(T)?,b:Node(T)?)-instance-method","name":"meld","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node(T) | Nil"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Node(T) | Nil"}],"args_string":"(a : Node(T)?, b : Node(T)?)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr#L45","def":{"name":"meld","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node(T) | Nil"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Node(T) | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if a.nil?\n  return b\nend\nif b.nil?\n  return a\nend\nif @compare_proc.call(a.value, b.value)\n  a, b = b, a\nend\na.right = meld(a.right, b)\na.left, a.right = a.right, a.left\na\n"}},{"id":"pop-instance-method","html_id":"pop-instance-method","name":"pop","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr#L61","def":{"name":"pop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @root.nil?\n  return nil\nend\nroot = @root.not_nil!\nret = root.value\n@root = meld(root.left, root.right)\n@size = @size - 1\nret\n"}},{"id":"push(value:T)-instance-method","html_id":"push(value:T)-instance-method","name":"push","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr#L56","def":{"name":"push","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = meld(@root, Node(T).new(nil, nil, value))\n@size = @size + 1\n"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/skew_heap.cr#L22","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/String","path":"AtCoder/String.html","kind":"module","full_name":"AtCoder::String","name":"String","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"string.cr","line_number":18,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/string.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":null,"summary":null,"class_methods":[{"id":"z_algorithm(sequence)-class-method","html_id":"z_algorithm(sequence)-class-method","name":"z_algorithm","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""}],"args_string":"(sequence)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/string.cr#L19","def":{"name":"z_algorithm","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = sequence.size\nif n == 0\n  return [] of Int32\nend\nz = [0] * n\ni, j = 1, 0\nwhile i < n\n  z[i] = (  (j + z[j]) <= i) ? 0 : (  ((j + z[j]) - i) < z[i - j] ? (j + z[j]) - i : z[i - j])\n  while (i + z[i]) < n && (sequence[z[i]] == sequence[i + z[i]])\n    __temp_39 = i\n    z[__temp_39] = z[__temp_39] + 1\n  end\n  if (j + z[j]) < (i + z[i])\n    j = i\n  end\n  i = i + 1\nend\nz[0] = n\nz\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/Tree","path":"AtCoder/Tree.html","kind":"class","full_name":"AtCoder::Tree(NodeInfo, EdgeInfo)","name":"Tree","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/AtCoder/UndirectedGraph","kind":"class","full_name":"AtCoder::UndirectedGraph","name":"UndirectedGraph"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/AtCoder/UndirectedGraph","kind":"class","full_name":"AtCoder::UndirectedGraph","name":"UndirectedGraph"},{"html_id":"github.com/google/ac-library.cr/AtCoder/Graph","kind":"class","full_name":"AtCoder::Graph","name":"Graph"},{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph.cr","line_number":157,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(nodes:Array(NodeInfo))-class-method","html_id":"new(nodes:Array(NodeInfo))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(NodeInfo)"}],"args_string":"(nodes : Array(NodeInfo))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L24","def":{"name":"new","args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(NodeInfo)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Tree(NodeInfo, EdgeInfo).allocate\n_.initialize(nodes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int64,initial_node:NodeInfo=nil)-class-method","html_id":"new(size:Int64,initial_node:NodeInfo=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"initial_node","doc":null,"default_value":"nil","external_name":"initial_node","restriction":"NodeInfo"}],"args_string":"(size : Int64, initial_node : NodeInfo = <span class=\"n\">nil</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L32","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"initial_node","doc":null,"default_value":"nil","external_name":"initial_node","restriction":"NodeInfo"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Tree(NodeInfo, EdgeInfo).allocate\n_.initialize(size, initial_node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"diameter-instance-method","html_id":"diameter-instance-method","name":"diameter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L162","def":{"name":"diameter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@farthest_node = -1_i64\n@farthest_depth = 0_i64\ndfs(0_i64, 0_i64) do |node, depth, info, callback|\n  weight = info[:edge_info]\n  depth = depth + (weight.nil? ? 0 : weight)\n  if @farthest_depth.not_nil! < depth\n    @farthest_node = node\n    @farthest_depth = depth\n  end\n  callback.call(depth)\nend\nstart_node = @farthest_node.not_nil!\n@farthest_node = -1_i64\n@farthest_depth = 0_i64\n@parents = Array(Int64).new(@size, -1_i64)\ndfs(start_node, 0_i64) do |node, depth, info, callback|\n  weight = info[:edge_info]\n  depth = depth + (weight.nil? ? 0 : weight)\n  @parents.not_nil![node] = info[:parent]\n  if @farthest_depth.not_nil! < depth\n    @farthest_node = node\n    @farthest_depth = depth\n  end\n  callback.call(depth)\nend\n{@farthest_depth.not_nil!, start_node, @farthest_node.not_nil!, @parents.not_nil!}\n"}},{"id":"dist(a,b)-instance-method","html_id":"dist(a,b)-instance-method","name":"dist","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L281","def":{"name":"dist","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"lca_node = lca(a, b)\nlca_depths = @lca_depths.not_nil!\n(lca_depths[a] - lca_depths[lca_node]) + (lca_depths[b] - lca_depths[lca_node])\n"}},{"id":"lca(a,b)-instance-method","html_id":"lca(a,b)-instance-method","name":"lca","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L237","def":{"name":"lca","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @lca_root.nil?\n  lca_precompute(0_i64)\nend\nlca_ancestors = @lca_ancestors.not_nil!\nlca_depths = @lca_depths.not_nil!\ndepth_a = lca_depths[a]\ndepth_b = lca_depths[b]\nif depth_a < depth_b\n  depth_a, depth_b, a, b = depth_b, depth_a, b, a\nend\nif depth_a != depth_b\n  a = lca_nth_prev(a, depth_a - depth_b)\nend\nif a == b\n  return a\nend\n(@size_bits - 1).downto(0) do |i|\n  if (lca_ancestors[a][i] == -1) || (lca_ancestors[b][i] == -1)\n    next\n  end\n  if lca_ancestors[a][i] != lca_ancestors[b][i]\n    a = lca_ancestors[a][i]\n    b = lca_ancestors[b][i]\n  end\nend\na = lca_ancestors[a][0]\nb = lca_ancestors[b][0]\nif ((a != b) || (a == -1)) || (b == -1)\n  raise(Exception.new(\"Assertion error\"))\nend\na\n"}},{"id":"on_path?(a,b,c)-instance-method","html_id":"on_path?(a,b,c)-instance-method","name":"on_path?","doc":"Returns `true` if node `c` is on the path from `a` to `b`.","summary":"<p>Returns <code>true</code> if node <code>c</code> is on the path from <code>a</code> to <code>b</code>.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":""}],"args_string":"(a, b, c)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L289","def":{"name":"on_path?","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((dist(a, c)) + (dist(c, b))) == (dist(a, b))"}}],"macros":[],"types":[]},{"html_id":"github.com/google/ac-library.cr/AtCoder/TwoSat","path":"AtCoder/TwoSat.html","kind":"class","full_name":"AtCoder::TwoSat","name":"TwoSat","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"two_sat.cr","line_number":30,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/two_sat.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":"Implements [atcoder::two_sat](https://atcoder.github.io/ac-library/master/document_en/twosat.html)\n\n```\ntwosat = AtCoder::TwoSat.new(2_i64)\ntwosat.add_clause(0, true, 1, false)\ntwosat.add_clause(1, true, 0, false)\ntwosat.add_clause(0, false, 1, false)\ntwosat.satisfiable? # => true\ntwosat.answer       # => [false, false]\n```","summary":"<p>Implements <a href=\"https://atcoder.github.io/ac-library/master/document_en/twosat.html\" target=\"_blank\">atcoder::two_sat</a></p>","class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/two_sat.cr#L39","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_clause(i,f,j,g)-instance-method","html_id":"add_clause(i,f,j,g)-instance-method","name":"add_clause","doc":"Implements atcoder::two_sat.add_clause(i, f, j, g).","summary":"<p>Implements atcoder::two_sat.add_clause(i, f, j, g).</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""},{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":""},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":""},{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":""}],"args_string":"(i, f, j, g)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/two_sat.cr#L56","def":{"name":"add_clause","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""},{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":""},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":""},{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@scc.add_edge(var(i, !f), var(j, g))\n@scc.add_edge(var(j, !g), var(i, f))\n"}},{"id":"answer-instance-method","html_id":"answer-instance-method","name":"answer","doc":"Implements atcoder::two_sat.answer().\n\nThis method will raise `NotSatisfiableError` if it's not satisfiable.","summary":"<p>Implements atcoder::two_sat.answer().</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/two_sat.cr#L85","def":{"name":"answer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @satisfiable\nelse\n  raise(NotSatisfiableError.new)\nend\nArray(Bool).new(@size) do |i|\n  @group_list.not_nil![i] > @group_list.not_nil![i + @size]\nend\n"}},{"id":"satisfiable?-instance-method","html_id":"satisfiable?-instance-method","name":"satisfiable?","doc":"Implements atcoder::two_sat.satisfiable().","summary":"<p>Implements atcoder::two_sat.satisfiable().</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/two_sat.cr#L62","def":{"name":"satisfiable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@satisfiable = false\ngroups = @scc.scc\n@group_list = Array(Int64).new(@size * 2, 0_i64)\ngroups.each_with_index do |group, i|\n  group.each do |item|\n    @group_list[item] = i.to_i64\n  end\nend\n@size.times do |i|\n  if @group_list[i] == @group_list[i + @size]\n    return false\n  end\nend\n@satisfiable = true\n"}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/two_sat.cr#L31","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@size"}}],"macros":[],"types":[{"html_id":"github.com/google/ac-library.cr/AtCoder/TwoSat/NotSatisfiableError","path":"AtCoder/TwoSat/NotSatisfiableError.html","kind":"class","full_name":"AtCoder::TwoSat::NotSatisfiableError","name":"NotSatisfiableError","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"two_sat.cr","line_number":33,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/two_sat.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder/TwoSat","kind":"class","full_name":"AtCoder::TwoSat","name":"TwoSat"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/two_sat.cr#L34","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/google/ac-library.cr/AtCoder/UndirectedGraph","path":"AtCoder/UndirectedGraph.html","kind":"class","full_name":"AtCoder::UndirectedGraph(NodeInfo, EdgeInfo)","name":"UndirectedGraph","abstract":false,"superclass":{"html_id":"github.com/google/ac-library.cr/AtCoder/Graph","kind":"class","full_name":"AtCoder::Graph","name":"Graph"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/AtCoder/Graph","kind":"class","full_name":"AtCoder::Graph","name":"Graph"},{"html_id":"github.com/google/ac-library.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph.cr","line_number":136,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/google/ac-library.cr/AtCoder/Tree","kind":"class","full_name":"AtCoder::Tree(NodeInfo, EdgeInfo)","name":"Tree"}],"including_types":[],"namespace":{"html_id":"github.com/google/ac-library.cr/AtCoder","kind":"module","full_name":"AtCoder","name":"AtCoder"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(nodes:Array(NodeInfo))-class-method","html_id":"new(nodes:Array(NodeInfo))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(NodeInfo)"}],"args_string":"(nodes : Array(NodeInfo))","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L24","def":{"name":"new","args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(NodeInfo)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UndirectedGraph(NodeInfo, EdgeInfo).allocate\n_.initialize(nodes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int64,initial_node:NodeInfo=nil)-class-method","html_id":"new(size:Int64,initial_node:NodeInfo=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"initial_node","doc":null,"default_value":"nil","external_name":"initial_node","restriction":"NodeInfo"}],"args_string":"(size : Int64, initial_node : NodeInfo = <span class=\"n\">nil</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L32","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int64"},{"name":"initial_node","doc":null,"default_value":"nil","external_name":"initial_node","restriction":"NodeInfo"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UndirectedGraph(NodeInfo, EdgeInfo).allocate\n_.initialize(size, initial_node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(a,b,edge:EdgeInfo=1_i64)-instance-method","html_id":"add_edge(a,b,edge:EdgeInfo=1_i64)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"edge","doc":null,"default_value":"1_i64","external_name":"edge","restriction":"EdgeInfo"}],"args_string":"(a, b, edge : EdgeInfo = <span class=\"n\">1_i64</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L137","def":{"name":"add_edge","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"edge","doc":null,"default_value":"1_i64","external_name":"edge","restriction":"EdgeInfo"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@edges << edge\nedge_id = @edges.size.to_i64 - 1\n@adjacencies[a][b.to_i64] = edge_id\n@adjacencies[b][a.to_i64] = edge_id\nedge_id\n"}},{"id":"get_edge(a,b)-instance-method","html_id":"get_edge(a,b)-instance-method","name":"get_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L145","def":{"name":"get_edge","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"edge_id = @adjacencies[a][b.to_i64]\n@edges[edge_id]\n"}},{"id":"update_edge(a,b,edge:EdgeInfo=1_i64)-instance-method","html_id":"update_edge(a,b,edge:EdgeInfo=1_i64)-instance-method","name":"update_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"edge","doc":null,"default_value":"1_i64","external_name":"edge","restriction":"EdgeInfo"}],"args_string":"(a, b, edge : EdgeInfo = <span class=\"n\">1_i64</span>)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/graph.cr#L150","def":{"name":"update_edge","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"edge","doc":null,"default_value":"1_i64","external_name":"edge","restriction":"EdgeInfo"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"edge_id = @adjacencies[a][b.to_i64]\n@edges[edge_id] = edge\nedge_id\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/google/ac-library.cr/Int","path":"Int.html","kind":"struct","full_name":"Int","name":"Int","abstract":true,"superclass":{"html_id":"github.com/google/ac-library.cr/Number","kind":"struct","full_name":"Number","name":"Number"},"ancestors":[{"html_id":"github.com/google/ac-library.cr/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/google/ac-library.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/google/ac-library.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/google/ac-library.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"prime.cr","line_number":288,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr"},{"filename":"mod_int.cr","line_number":225,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"mod_int.cr","line_number":226,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"mod_int.cr","line_number":227,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"mod_int.cr","line_number":228,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"},{"filename":"mod_int.cr","line_number":229,"url":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr"}],"repository_name":"github.com/google/ac-library.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Int is the base type of all integer types.\n\nThere are four signed integer types: `Int8`, `Int16`, `Int32` and `Int64`,\nbeing able to represent numbers of 8, 16, 32 and 64 bits respectively.\nThere are four unsigned integer types: `UInt8`, `UInt16`, `UInt32` and `UInt64`.\n\nAn integer literal is an optional `+` or `-` sign, followed by\na sequence of digits and underscores, optionally followed by a suffix.\nIf no suffix is present, the literal's type is the lowest between `Int32`, `Int64` and `UInt64`\nin which the number fits:\n\n```\n1 # Int32\n\n1_i8  # Int8\n1_i16 # Int16\n1_i32 # Int32\n1_i64 # Int64\n\n1_u8  # UInt8\n1_u16 # UInt16\n1_u32 # UInt32\n1_u64 # UInt64\n\n+10 # Int32\n-20 # Int32\n\n2147483648          # Int64\n9223372036854775808 # UInt64\n```\n\nThe underscore `_` before the suffix is optional.\n\nUnderscores can be used to make some numbers more readable:\n\n```\n1_000_000 # better than 1000000\n```\n\nBinary numbers start with `0b`:\n\n```\n0b1101 # == 13\n```\n\nOctal numbers start with `0o`:\n\n```\n0o123 # == 83\n```\n\nHexadecimal numbers start with `0x`:\n\n```\n0xFE012D # == 16646445\n0xfe012d # == 16646445\n```","summary":"<p>Int is the base type of all integer types.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"*(value:AtCoder::ModInt167772161)-instance-method","html_id":"*(value:AtCoder::ModInt167772161)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"args_string":"(value : AtCoder::ModInt167772161)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value * self"}},{"id":"*(value:AtCoder::ModInt754974721)-instance-method","html_id":"*(value:AtCoder::ModInt754974721)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"args_string":"(value : AtCoder::ModInt754974721)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value * self"}},{"id":"*(value:AtCoder::ModInt998244353)-instance-method","html_id":"*(value:AtCoder::ModInt998244353)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"args_string":"(value : AtCoder::ModInt998244353)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value * self"}},{"id":"*(value:AtCoder::ModInt1000000007)-instance-method","html_id":"*(value:AtCoder::ModInt1000000007)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"args_string":"(value : AtCoder::ModInt1000000007)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value * self"}},{"id":"*(value:AtCoder::ModInt469762049)-instance-method","html_id":"*(value:AtCoder::ModInt469762049)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"args_string":"(value : AtCoder::ModInt469762049)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value * self"}},{"id":"+(value:AtCoder::ModInt469762049)-instance-method","html_id":"+(value:AtCoder::ModInt469762049)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"args_string":"(value : AtCoder::ModInt469762049)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value + self"}},{"id":"+(value:AtCoder::ModInt167772161)-instance-method","html_id":"+(value:AtCoder::ModInt167772161)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"args_string":"(value : AtCoder::ModInt167772161)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value + self"}},{"id":"+(value:AtCoder::ModInt754974721)-instance-method","html_id":"+(value:AtCoder::ModInt754974721)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"args_string":"(value : AtCoder::ModInt754974721)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value + self"}},{"id":"+(value:AtCoder::ModInt998244353)-instance-method","html_id":"+(value:AtCoder::ModInt998244353)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"args_string":"(value : AtCoder::ModInt998244353)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value + self"}},{"id":"+(value:AtCoder::ModInt1000000007)-instance-method","html_id":"+(value:AtCoder::ModInt1000000007)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"args_string":"(value : AtCoder::ModInt1000000007)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value + self"}},{"id":"-(value:AtCoder::ModInt1000000007)-instance-method","html_id":"-(value:AtCoder::ModInt1000000007)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"args_string":"(value : AtCoder::ModInt1000000007)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(-value) + self"}},{"id":"-(value:AtCoder::ModInt998244353)-instance-method","html_id":"-(value:AtCoder::ModInt998244353)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"args_string":"(value : AtCoder::ModInt998244353)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(-value) + self"}},{"id":"-(value:AtCoder::ModInt754974721)-instance-method","html_id":"-(value:AtCoder::ModInt754974721)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"args_string":"(value : AtCoder::ModInt754974721)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(-value) + self"}},{"id":"-(value:AtCoder::ModInt167772161)-instance-method","html_id":"-(value:AtCoder::ModInt167772161)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"args_string":"(value : AtCoder::ModInt167772161)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(-value) + self"}},{"id":"-(value:AtCoder::ModInt469762049)-instance-method","html_id":"-(value:AtCoder::ModInt469762049)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"args_string":"(value : AtCoder::ModInt469762049)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(-value) + self"}},{"id":"/(value:AtCoder::ModInt1000000007)-instance-method","html_id":"/(value:AtCoder::ModInt1000000007)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"args_string":"(value : AtCoder::ModInt1000000007)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self // value"}},{"id":"/(value:AtCoder::ModInt998244353)-instance-method","html_id":"/(value:AtCoder::ModInt998244353)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"args_string":"(value : AtCoder::ModInt998244353)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self // value"}},{"id":"/(value:AtCoder::ModInt754974721)-instance-method","html_id":"/(value:AtCoder::ModInt754974721)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"args_string":"(value : AtCoder::ModInt754974721)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self // value"}},{"id":"/(value:AtCoder::ModInt167772161)-instance-method","html_id":"/(value:AtCoder::ModInt167772161)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"args_string":"(value : AtCoder::ModInt167772161)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self // value"}},{"id":"/(value:AtCoder::ModInt469762049)-instance-method","html_id":"/(value:AtCoder::ModInt469762049)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"args_string":"(value : AtCoder::ModInt469762049)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self // value"}},{"id":"//(value:AtCoder::ModInt1000000007)-instance-method","html_id":"//(value:AtCoder::ModInt1000000007)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"args_string":"(value : AtCoder::ModInt1000000007)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.inv * self"}},{"id":"//(value:AtCoder::ModInt469762049)-instance-method","html_id":"//(value:AtCoder::ModInt469762049)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"args_string":"(value : AtCoder::ModInt469762049)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.inv * self"}},{"id":"//(value:AtCoder::ModInt167772161)-instance-method","html_id":"//(value:AtCoder::ModInt167772161)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"args_string":"(value : AtCoder::ModInt167772161)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.inv * self"}},{"id":"//(value:AtCoder::ModInt754974721)-instance-method","html_id":"//(value:AtCoder::ModInt754974721)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"args_string":"(value : AtCoder::ModInt754974721)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.inv * self"}},{"id":"//(value:AtCoder::ModInt998244353)-instance-method","html_id":"//(value:AtCoder::ModInt998244353)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"args_string":"(value : AtCoder::ModInt998244353)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.inv * self"}},{"id":"==(value:AtCoder::ModInt1000000007)-instance-method","html_id":"==(value:AtCoder::ModInt1000000007)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"args_string":"(value : AtCoder::ModInt1000000007)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L225","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt1000000007"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == self"}},{"id":"==(value:AtCoder::ModInt998244353)-instance-method","html_id":"==(value:AtCoder::ModInt998244353)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"args_string":"(value : AtCoder::ModInt998244353)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L226","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt998244353"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == self"}},{"id":"==(value:AtCoder::ModInt754974721)-instance-method","html_id":"==(value:AtCoder::ModInt754974721)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"args_string":"(value : AtCoder::ModInt754974721)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L227","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt754974721"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == self"}},{"id":"==(value:AtCoder::ModInt167772161)-instance-method","html_id":"==(value:AtCoder::ModInt167772161)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"args_string":"(value : AtCoder::ModInt167772161)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L228","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt167772161"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == self"}},{"id":"==(value:AtCoder::ModInt469762049)-instance-method","html_id":"==(value:AtCoder::ModInt469762049)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"args_string":"(value : AtCoder::ModInt469762049)","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/mod_int.cr#L229","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AtCoder::ModInt469762049"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == self"}},{"id":"prime?-instance-method","html_id":"prime?-instance-method","name":"prime?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/google/ac-library.cr/blob/b0a1ad65b09d23b2d559f765d19280c695329b54/src/prime.cr#L289","def":{"name":"prime?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AtCoder::Prime.prime?(self)"}}],"macros":[],"types":[]}]}}