name: Run test and verifier

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: crystallang/crystal:0.33.0
      # https://github.com/SimonKagstrom/kcov/issues/151#issuecomment-249284631
      options: --security-opt seccomp=unconfined
    steps:
    - name: Install latest git
      run: |
        apt-get update
        apt-get install software-properties-common -y
        apt-add-repository ppa:git-core/ppa -y
        apt-get install git -y
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        apt-get install python3 libpython3.8 python3-dev python3-pip bash libxml2-dev libxslt-dev build-essential binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev cmake curl -y
    - name: Install kcov
      run: |
        cd /tmp
        git clone --depth 1 -b v38 https://github.com/SimonKagstrom/kcov.git
        mkdir -p kcov/build
        cd kcov/build
        cmake ..
        make -j8
        make install
    - name: Install pip dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt
    - name: Install Crystal dependencies
      run: shards
    - name: Run tests
      run: crystal spec --verbose
    - name: Run verifier
      run: oj-verify run
    - name: Run linter
      run: bin/ameba
    - name: Run coverage
      run: |
        shards build test
        kcov --clean --include-path=atcoder coverage ./bin/test
        bash <(curl -s https://codecov.io/bash) -s coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      shell: bash
    - name: Build docs
      if: github.ref == 'refs/heads/master'
      run: crystal docs atcoder/* -o dist
    - name: Deploy docs to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/master'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
    - name: Run Benchmarks
      run: crystal run --release benchmarks/*
