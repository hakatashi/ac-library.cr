name: Run test and verifier

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: crystallang/crystal:0.33.0
      # https://github.com/SimonKagstrom/kcov/issues/151#issuecomment-249284631
      options: --security-opt seccomp=unconfined
    steps:
    - name: Install latest git
      run: |
        apt-get update
        apt-get install software-properties-common -y
        apt-add-repository ppa:git-core/ppa -y
        apt-get install git -y
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        apt-get install python3 libpython3.8 python3-dev python3-pip bash libxml2-dev libxslt-dev build-essential binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev cmake curl wget -y
    - name: Install kcov
      run: |
        cd /tmp
        git clone --depth 1 -b v38 https://github.com/SimonKagstrom/kcov.git
        mkdir -p kcov/build
        cd kcov/build
        cmake ..
        make -j8
        make install
    - name: Install latest shards
      run: |
        cd /tmp
        wget https://github.com/crystal-lang/crystal/releases/download/1.0.0/crystal-1.0.0-1-linux-x86_64.tar.gz
        tar xf crystal-1.0.0-1-linux-x86_64.tar.gz
        cp crystal-1.0.0-1/bin/shards /usr/bin
    - name: Install Crystal dependencies
      run: |
        shards install --ignore-crystal-version
        # Remove lib directory since it includes recursive symlink and that makes oj-verify hang
        rm -rf lib
    - name: Run tests
      run: crystal spec --verbose
    - name: Run linter
      run: bin/ameba
    - name: Run coverage
      run: |
        shards build test --ignore-crystal-version
        kcov --clean --include-path=src coverage ./bin/test
        bash <(curl -s https://codecov.io/bash) -s coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      shell: bash
    - name: Run Benchmarks
      run: crystal run --release benchmarks/*

  verify:
    runs-on: ubuntu-latest
    container:
      image: crystallang/crystal:0.33.0
    steps:
    - name: Install latest git
      run: |
        apt-get update
        apt-get install software-properties-common -y
        apt-add-repository ppa:git-core/ppa -y
        apt-get install git -y
        git config --global --add safe.directory /__w/ac-library.cr/ac-library.cr
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.6'
      env:
        ImageOS: ubuntu18
    - name: Cache .verify-helper
      uses: actions/cache@v2
      with:
        path: |
          .verify-helper/cache
          .verify-helper/timestamps.local.json
        key: ${{runner.os}}-verify-helper
    - name: Install dependencies
      run: |
        apt-get install python3 libpython3.8 python3-dev python3-pip bash libxml2-dev libxslt-dev build-essential binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev cmake curl wget time -y
    - name: Install pip dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt
    - name: Install latest shards
      run: |
        cd /tmp
        wget https://github.com/crystal-lang/crystal/releases/download/1.0.0/crystal-1.0.0-1-linux-x86_64.tar.gz
        tar xf crystal-1.0.0-1-linux-x86_64.tar.gz
        cp crystal-1.0.0-1/bin/shards /usr/local/bin
    - name: Install Crystal dependencies
      run: |
        shards install --ignore-crystal-version
        # Remove lib directory since it includes recursive symlink and that makes oj-verify hang
        rm -rf lib
    - name: Run verifier
      run: oj-verify run --jobs 4
    - name: Generate bundled docs
      if: ${{ github.event_name == 'push' }}
      run: oj-verify docs --jobs 4
    - name: Generate API docs
      if: ${{ github.event_name == 'push' }}
      run: crystal docs --progress --stats --time -o dist/api
    - name: Build bundled docs
      if: ${{ github.event_name == 'push' }}
      run: |
        gem install bundler
        bundle install --gemfile=.verify-helper/markdown/Gemfile --path .vendor/bundle
        bundle exec --gemfile=.verify-helper/markdown/Gemfile jekyll build --source .verify-helper/markdown --destination dist/docs --baseurl ac-library.cr/docs
    - name: Deploy docs to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.event_name == 'push' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
